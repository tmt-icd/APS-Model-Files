subsystem=APS
component=ICS.SAM
publish {
	description = """
Status and ICS components states (positions, temperatures, etc) telemetry
"""

	events=[
		{
			name=icsStatusEvent
			description="""APS-ICS state event for all ICS components (positions, temperatures, etc)"""
			maxRate = 1
			archive=true
			archiveDuration="3 months"
			attributes=[
                {
					name=aptStatus
					description="""Status of APT functional group."""
					enum = ["READY", "DEGRADED", "FAULTED"]
				}
                {
					name=pitStatus
					description="""Status of PIT functional group."""
					enum = ["READY", "DEGRADED", "FAULTED"]
				}
                {
					name=pshStatus
					description="""Status of PSH functional group."""
					enum = ["READY", "DEGRADED", "FAULTED"]
				}
                {
					name=focStatus
					description="""Status of Fore Optics and Collimator functional group."""
					enum = ["READY", "DEGRADED", "FAULTED"]
				}
                {
					name=abeStatus
					description="""Status of APS Bench Enclosure functional group."""
					enum = ["READY", "DEGRADED", "FAULTED"]
				}
                {
					name=lowfsStatus
					description="""Status of LOWFS functional group."""
					enum = ["READY", "DEGRADED", "FAULTED"]
				}
    			{
					name=foc.steeringBeamSplitter.xStage.position
					description="""The current steeringBeamSplitter x axis position"""
					type=double
                    units=millimeter 
				}
				{
					name=foc.steeringBeamSplitter.xStage.indexed
					description="""True if the steeringBeamSplitter x axis has been homed"""
					type=boolean
				}
				{
					name=foc.steeringBeamSplitter.xStage.inPosition
					description="""True if the steeringBeamSplitter x axis has reached its target with sufficient accuracy."""
					type=boolean
				}
 			    {
					name=foc.steeringBeamSplitter.yStage.position
					description="""The current steeringBeamSplitter y axis position"""
					type=double
                    units=millimeter 
				}
				{
					name=foc.steeringBeamSplitter.yStage.indexed
					description="""True if the steeringBeamSplitter y axis has been homed"""
					type=boolean
				}
				{
					name=foc.steeringBeamSplitter.yStage.inPosition
					description="""True if the steeringBeamSplitter y axis has reached its target with sufficient accuracy."""
					type=boolean
				}
				{
					name=foc.calibrationSourceStage.position
					description="""The current calibrationSourceStage position"""
					type=double
                    units=millimeter 
				}
				{
					name=foc.calibrationSourceStage.indexed
					description="""True if the calibrationSourceStage has been homed"""
					type=boolean
				}
				{
					name=foc.calibrationSourceStage.inPosition
					description="""True if the calibrationSourceStage has reached its target with sufficient accuracy."""
					type=boolean
				}
				{
					name=foc.calibrationSourceStage.lightOn
					description="""status of calibrationSourceStage light on/off state"""
					enum=["ON", "OFF"]
				}
				{
					name=foc.calibrationSourceStage.lightIntensity
					description="""calibrationSourceStage light intensity read from galil (% of max)"""
					type=double
				}
				{
					name=foc.kMirror.mode
					description="""The current K-Mirror mode"""
					enum=[SLEWING, TRACKING, MANUAL] 
				}
				{
					name=foc.kMirror.position
					description="""The current K-Mirror position"""
					type=double
                    units=degree
				}
				{
					name=foc.kMirror.velocity
					description="""The current K-Mirror velocity in degree/second"""
					type=double
                    units=NoUnits
				}
				{
					name=foc.kMirror.indexed
					description="""True if the K-Mirror has been homed"""
					type=boolean
				}
    			{
					name=foc.tiltPlate.xStage.position
					description="""The current tiltPlate X stage position"""
					type=double
                    units=millimeter 
				}
				{
					name=foc.tiltPlate.xStage.indexed
					description="""True if the tiltPlate X stage has been homed"""
					type=boolean
				}
				{
					name=foc.tiltPlate.xStage.inPosition
					description="""True if the tiltPlate X stage has reached its target with sufficient accuracy."""
					type=boolean
				}
    			{
					name=foc.tiltPlate.yStage.position
					description="""The current tiltPlate Y stage position"""
					type=double
                    units=millimeter 
				}
				{
					name=foc.tiltPlate.yStage.indexed
					description="""True if the tiltPlate Y stage has been homed"""
					type=boolean
				}
				{
					name=foc.tiltPlate.yStage.inPosition
					description="""True if the tiltPlate Y stage has reached its target with sufficient accuracy."""
					type=boolean
				}
 				{
					name=foc.columatorUnit.frontMotor.position
					description="""The current axis position"""
					type=double
                    units=millimeter 
				}
				{
					name=foc.columatorUnit.frontMotor.position.indexed
					description="""True if the columatorUnit frontMotor has been homed"""
					type=boolean
				}
				{
					name=foc.columatorUnit.frontMotor.position.inPosition
					description="""True if the columatorUnit frontMotor has reached its target with sufficient accuracy."""
					type=boolean
				}
				{
					name=foc.columatorUnit.backMotor.position
					description="""The current columatorUnit backMotor position"""
					type=double
                    units=millimeter 
				}
				{
					name=foc.columatorUnit.backMotor.position.indexed
					description="""True if the columatorUnit backMotor has been homed"""
					type=boolean
				}
				{
					name=foc.columatorUnit.backMotor.position.inPosition
					description="""True if the axis has olumatorUnit backMotor its target with sufficient accuracy."""
					type=boolean
				}
      		    {
					name=psh.focusStage.position
					description="""The current PSH focus stage position"""
					type=double
                    units=millimeter 
				}
				{
					name=psh.focusStage.indexed
					description="""True if the PSH focus stage has been homed"""
					type=boolean
				}
				{
					name=psh.focusStage.inPosition
					description="""True if the PSH focus stage has reached its target with sufficient accuracy."""
					type=boolean
				}
      		    {
					name=pit.focusStage.position
					description="""The current PIT focus stage position"""
					type=double
                    units=millimeter 
				}
				{
					name=pit.focusStage.indexed
					description="""True if the PIT focus stage has been homed"""
					type=boolean
				}
				{
					name=pit.focusStage.inPosition
					description="""True if the PIT focus stage has reached its target with sufficient accuracy."""
					type=boolean
				}
				{
					name=stim.fiberSourceXAxis.position
					description="""The current stimulus fiberSource X Axis position"""
					type=double
                    units=millimeter 
				}
				{
					name=stim.fiberSourceXAxis.indexed
					description="""True if the stimulus fiberSource X Axis has been homed"""
					type=boolean
				}
				{
					name=stim.fiberSourceXAxis.inPosition
					description="""True if the stimulus fiberSource X Axis has reached its target with sufficient accuracy."""
					type=boolean
				}
				{
					name=stim.fiberSourceYAxis.position
					description="""The current stimulus fiberSource Y Axis position"""
					type=double
                    units=millimeter 
				}
				{
					name=stim.fiberSourceYAxis.indexed
					description="""True if the stimulus fiberSource Y Axis has been homed"""
					type=boolean
				}
				{
					name=stim.fiberSourceYSAxis.inPosition
					description="""True if the stimulus fiberSource Y Axis has reached its target with sufficient accuracy."""
					type=boolean
				}
				{
					name=stim.fiberSourceZAxis.position
					description="""The current fiberSource Z Stage position"""
					type=double
                    units=millimeter 
				}
				{
					name=stim.fiberSourceZAxis.indexed
					description="""True if the fiberSource Z Stage has been homed"""
					type=boolean
				}
				{
					name=stim.fiberSourceZAxis.inPosition
					description="""True if the stimulus fiberSource Z Axis has reached its target with sufficient accuracy."""
					type=boolean
				}
				{
					name=stim.fiberSourceStage.lightOn
					description="""status of stimulus fiberSourceStage light on/off state"""
					enum=["ON", "OFF"]
				}
				{
					name=stim.fiberSourceStage.lightIntensity
					description="""stimulus fiberSourceStage light intensity read from galil (% of max)"""
					type=double
				}
      		    {
					name=stim.pupilMaskXStage.position
					description="""The current stimulus pupilMask X Stage position"""
					type=double
                    units=millimeter 
				}
				{
					name=stim.pupilMaskXStage.indexed
					description="""True if the stimulus pupilMask X Stage has been homed"""
					type=boolean
				}
				{
					name=stim.pupilMaskXStage.inPosition
					description="""True if the stimulus pupilMask X Stage has reached its target with sufficient accuracy."""
					type=boolean
				}
     		    {
					name=stim.pupilMaskYStage.position
					description="""The current pupilMask Y Stage position"""
					type=double
                    units=millimeter 
				}
				{
					name=stim.pupilMaskYStage.indexed
					description="""True if the pupilMask Y Stage has been homed"""
					type=boolean
				}
				{
					name=stim.pupilMaskYStage.inPosition
					description="""True if the stimulus pupilMask Y Stage has reached its target with sufficient accuracy."""
					type=boolean
				}
    		    {
					name=stim.pupilMaskPhiStage.position
					description="""The current stimulus pupilMask Phi Stage position"""
					type=double
                    units=degree 
				}
				{
					name=stim.pupilMaskPhiStage.indexed
					description="""True if the stimulus pupilMask Phi Stage has been homed"""
					type=boolean
				}
				{
					name=stim.pupilMaskPhiStage.inPosition
					description="""True if the stimulus pupilMask Phi Stage has reached its target with sufficient accuracy."""
					type=boolean
				}
   		        {
					name=stim.insertionStage.position
					description="""The current stimulus insertion stage position"""
					type=double
                    units=millimeter 
				}
				{
					name=stim.insertionStage.indexed
					description="""True if the stimulus insertion stage has been homed"""
					type=boolean
				}
				{
					name=stim.insertionStage.inPosition
					description="""True if the stimulus insertion stage has reached its target with sufficient accuracy."""
					type=boolean
				}
                {
					name=abe.shutter.BladeASstate
					description="""Shutter Blade A state"""
					enum = ["OPEN", "CLOSED"]
				}
				{
					name=abe.shutter.bladeBState
					description="""Shutter Blade B state"""
					enum = ["OPEN", "CLOSED"]
				}
				{
					name=abe.shutter.errorIndicator
					description="""Shutter Error indicator bit state"""
					enum = ["YES", "NO"]
				}
                {
					name=apt.filterWheel.positionNum
					description="""The APT filter wheel position Number"""
					type=integer 
                    units=NoUnits
				}
				{
					name=apt.filterWheel.position
					description="""The APT filter wheel position in degrees"""
					type=double
                    units=degree
				}
				{
					name=apt.filterWheel.wheelState
					description="""The APT filter wheel state"""
					enum=[IDLE, MOVING, ERROR]
				}
				{
					name=apt.filterWheel.indexed
					description="""True if the APT filter wheel has been homed"""
					type=boolean
				}
				{
					name=apt.filterWheel.inPosition
					description="""True if the APT filter wheel has reached its target with sufficient accuracy."""
					type=boolean
				}
                {
					name=pit.filterWheel.positionNum
					description="""The PIT filter wheel position Number"""
					type=integer 
                    units=NoUnits
				}
                {
					name=psh.filterWheel.positionNum
					description="""The PSH filter wheel position Number"""
					type=integer 
                    units=NoUnits
				}
				{
					name=psh.filterWheel.position
					description="""The PSH filter wheel position in degrees"""
					type=double
                    units=degree
				}
				{
					name=psh.filterWheel.wheelState
					description="""The PSH filter wheel state"""
					enum=[IDLE, MOVING, ERROR]
				}
				{
					name=psh.filterWheel.indexed
					description="""True if the PSH filter has been homed"""
					type=boolean
				}
				{
					name=psh.filterWheel.inPosition
					description="""True if the PSH filter has reached its target with sufficient accuracy."""
					type=boolean
				}
                {
					name=pit.pupilMaskWheel.positionNum
					description="""The PIT pupil mask wheel position Number"""
					type=integer 
                    units=NoUnits
				}
				{
					name=pit.pupilMaskWheel.position
					description="""The PIT pupil mask wheel position in degrees"""
					type=double
                    units=degree
				}
				{
					name=pit.pupilMaskWheel.wheelState
					description="""The PIT pupil mask wheel state"""
					enum=[IDLE, MOVING, ERROR]
				}
                {
					name=pit.pupilMaskWheel.detentState
					description="""The PIT pupil mask wheel detent state"""
					enum=["RETRACTED", "EXTENDED", "OUT OF POSITION"]
				}
				{
					name=pit.pupilMaskWheel.indexed
					description="""True if the PIT pupil mask has been homed"""
					type=boolean
				}
				{
					name=pit.pupilMaskWheel.inPosition
					description="""True if the PIT pupil mask has reached its target with sufficient accuracy."""
					type=boolean
				}
                {
					name=psh.pupilMaskWheel.positionNum
					description="""The PIT pupil mask wheel position Number"""
					type=integer 
                    units=NoUnits
				}
				{
					name=psh.pupilMaskWheel.position
					description="""The PIT pupil mask wheel position in degrees"""
					type=double
                    units=degree
				}
				{
					name=psh.pupilMaskWheel.wheelState
					description="""The PIT pupil mask wheel state"""
					enum=[IDLE, MOVING, ERROR]
				}
                {
					name=psh.pupilMaskWheel.detentState
					description="""The PIT pupil mask wheel detent state"""
					enum=["RETRACTED", "EXTENDED", "OUT OF POSITION"]
				}
				{
					name=psh.pupilMaskWheel.indexed
					description="""True if the PIT pupil mask has been homed"""
					type=boolean
				}
				{
					name=psh.pupilMaskWheel.inPosition
					description="""True if the PIT pupil mask has reached its target with sufficient accuracy."""
					type=boolean
				}
                {
					name=abe.enclosure.purgeAirFlowRate
					description="""Purge Air Flow Rate (liters/sec)"""
					type=double
                    units=NoUnits
				}
				{
					name=abe.enclosure.coolantPressure
					description="""Overall Coolant Pressure (bars)"""
					type=double
                    units=bar
				}
				{
					name=abe.enclosure.pshCoolantFlowRate
					description="""PSH Detector Coolant Flow Rate (liters/sec)"""
					type=double
                    units=NoUnits
				}
				{
					name=abe.enclosure.pitCoolantFlowRate
					description="""PIT Detector Coolant Flow Rate (liters/sec)"""
					type=double
                    units=NoUnits
				}
				{
					name=abe.enclosure.aptCoolantFlowRate
					description="""APT Detector Coolant Flow Rate (liters/sec)"""
					type=double
                    units=NoUnits
				}
				{
					name=abe.enclosure.lowfsCoolantFlowRate
					description="""LOWFS Detector Coolant Flow Rate (liters/sec)"""
					type=double
                    units=NoUnits
				}
				{
					name=abe.enclosure.abe.enclosure.shutterTemperature
					description="""APS Bench enclosure shutter temperature (deg C)"""
					type=double
                    units=degC
				}
				{
					name=abe.enclosure.shutterHumidity
					description="""APS Bench enclosure shutter relative humidity (%)"""
					type=double
                    units=percent
				}
				{
					name=abe.enclosure.shutterDewPoint
					description="""APS Bench enclosure shutter dew point (deg C)"""
					type=double
                    units=degC
				}
				{
					name=abe.enclosure.pshTemperature
					description="""PSH detector temperature (deg C)"""
					type=double
                    units=degC
				}
				{
					name=abe.enclosure.pshHumidity
					description="""PSH detector relative humidity (%)"""
					type=double
                    units=percent
				}
				{
					name=abe.enclosure.pshDewPoint
					description="""PSH detector dew point (deg C)"""
					type=double
                    units=degC
				}
				{
					name=abe.enclosure.electronicsCabinetTemperature
					description="""Electronics Cabinet temperature (deg C)"""
					type=double
                    units=degC
				}
				{
					name=abe.enclosure.electronicsCabinetHumidity
					description="""Electronics Cabinet relative humidity (%)"""
					type=double
                    units=percent
				}
				{
					name=abe.enclosure.electronicsCabinetDewPoint
					description="""Electronics Cabinet dew point (deg C)"""
					type=double
                    units=degC
				}
				{
					name=abe.enclosure.placeholderCurrentTemperature
					description="""Placeholder for temperature readings from temperature sensors placed at various positions on the APS bench.  Number of sensors and positions TBD"""
					type=double
                    units=degC
				}
			]
		}
	]
}
