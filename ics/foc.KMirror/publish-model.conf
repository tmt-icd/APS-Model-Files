subsystem=APS
component=ICS.FOC.KMirror
publish {
events=[
		{
			name=status
			description="""K-Mirror status event"""
			maxRate = 1
			archive=true
            category=STATUS
			attributes=[
				{
					name=assemblyState
					description="""Current Assembly State"""
					enum = ["PRE_HOMED", "OPERATIONAL", "DEGRADED", "FAULTED"]
				}
				{
					name=hcdState
					description="""Current HCD State of the HCD that the assembly communicates with"""
					enum = ["UNINITIALIZED", "READY", "FAULTED"]
				}
				{
					name=commandState
					description="""Status of last command"""
					enum = ["IDLE", "PROCESSING", "ERROR_RECOVERY", "FAILED"]
				}
				{
					name=mode
					description="""The current K-Mirror mode"""
					enum=[SLEWING, TRACKING, MANUAL] 
				}
                {			
					name=slewModeState
					description="""The slew mode state of the K-Mirror.  SLEW_COMPLETE indicates the K-Mirror position has reached the rotational position  corresponding to the TCS pupil rotation event value, which during slewing is the expected position when the slew is complete"""
					enum=[NOT_SLEWING, SLEWING, SLEW_COMPLETE]
				}
				{
					name=trackingModeState
					description="""The tracking mode state of the K-Mirror.  The CONVERGED state is derived by comparing the K-Mirror position read from the Galil HCD currentStateAxis event to the last demand.  If this value is within the “Tracking Mode Pupil Rotation In Position Threshold”, the trackingConvergedFlag value is true.  The PIT Loop is not started until the TRACKING_CONVERGED.  Once started, the K-Mirror Tracking state transitions to the NOT_CONVERGED_WITH_PIT state and once converged, transitions to the CONVERGED_WITH_PIT state.  Once in this state PSH exposures can be taken.  If, during a PSH exposure, the tracking state transitions to TRACKING_ERROR, the exposure is marked bad and is retaken"""
					enum=[NOT_TRACKING, NOT_CONVERGED, CONVERGED, NOT_CONVERGED_WITH_PIT, CONVERGED_WITH_PIT, TRACKING_ERROR]
				}

            ]
        }
				
		{
			name=axisStatus
			description="""axis status event"""
			maxRate = 1
			archive=true
            category=STATUS
			attributes=[
				{
					name=axisState
					description="""The current axis state"""
					enum=[LOST, IDLE, MOVING, TRACKING, ERROR]
				}
				{
					name=position
					description="""The current axis position"""
					type=float
                    units=degree 
				}
				{
					name=velocity
					description="""The current axis velocity deg/sec"""
					type=float 
				}
				{
					name=indexed
					description="""True if the axis has been homed"""
					type=boolean
				}
				{
					name=inPosition
					description="""True if the axis has reached its target with sufficient accuracy."""
					type=boolean
				}
			]
		}
        {    
			name=axisConfig
			description="""Axis config event, published only when configAxis or configLinearAxis cmd has completed during assembly startup"""
			maxRate = 0.01
			archive=true
            category=STATUS
			attributes=[  
				{
					name=velocity
					description="""The maxiumum velocity for axis mechanism moves in mm/sec"""
					type=float
				}
				{
					name=acceleration
					description="""The acceleration used to reach the configured velocity for the axis in mm/sec2"""
					type=float
				}
				{
					name=deceleration
					description="""The deceleration applied at the end of motor motion for the axis in mm/sec2"""
					type=float 
				}
				{
					name=indexOffset
					description="""The offset applied from the physical index switch/mark before setting the axis motor position to 0.  Generally a useful starting position (center of motion) for the mechanism"""
					type=float
                    units=millimeter
				}
				{
					name=indexSpeed
					description="""The (generally slower) speed used when approaching the axis motor Index Switch for fine accuracy. (mm/sec)"""
					type=float
				}
				{
					name=inPositionThreshold
					description="""TUsed to determine successful completion of demanded moves for the axis.  Determined by the needed positioning accuracy of the mechanism"""
					type=float 
                    units=millimeter
				}
			]
		}

        {
			name=apsAlertEvent
			archive=true
			description="""Event used to communicate that an unexpected condition occured."""
			maxRate = 1
			archive=true
			attributes=[
				{
					name=messageSeverity
					description="""Unhandled errors require filling the message field, whereas other types should fill in the messageId"""
					enum = [WARN, ERROR, UNHANDLED_ERROR]
                }
				{
					name=source
					description="""Sensor originating warnings, errors, controller error codes/messages reported from the controller, and warnings/errors that are a result of calculations"""
					enum = [SENSOR, HARDWARE_REPORTED, CALCULATED]
                }
				{
					name=messageId
					description="""Key used within the PEAS UI resource properties configuration file that holds all messages, including information about where to extract and format procedure data values for inclusion in the message"""
					type=string
                }
				{
					name=message
					description="""Message supplied by the event source for unhandled errors"""
					type=string
                }
			]
		}
        {
			name=trackingError
			description="""K-Mirror tracking errors are outside limits"""
			maxRate = 1
			archive=true
            category=EVENT
			attributes=[
				{
					name=position
					description="""K-Mirror current reported position"""
					type=float
                    units=degree
				}
				{
					name=demand
					description="""Calculated demand of expected K-Mirror position"""
					type=float
                    units=degree
				}
				{
					name=threshold
					description="""K-Mirror position error threshold"""
					type=float
                    units=degree
				}
			]
		}
        {
			name=startupMetrics
			description="""Assembly startup metrics"""
			maxRate = 1
            category=STATUS
			archive=true
			attributes=[
				{
					name=initStartTime
					description="""Assembly initialization start time"""
					type=taiDate
				}
				{
					name=initCompletedTime
					description="""Assembly initialization completed time"""
					type=taiDate
				}
				{
					name=axisConfigureStartTime
					description="""Assembly axis configuration start time"""
					type=taiDate
				}
				{
					name=axisConfigureCompletedTime
					description="""Assembly axis configuration completed time"""
					type=taiDate
				}
				{
					name=axisHomeStartTime
					description="""Assembly axis homing started time"""
					type=taiDate
				}
				{
					name=axisHomeCompletedTime
					description="""Assembly axis homing completed time"""
					type=taiDate
				}
            ]
        }
        {
			name=axisMotionMetrics
			description="""K-Mirror axis motion metrics in response to commanding to a position.  This event is only published for motion commands in MANUAL mode"""
			maxRate = 1
            category=STATUS
			archive=true
			attributes=[
				{
					name=motionCmdReceived
					description="""Motion cmd received time"""
					type=taiDate
				}
				{
					name=motionCmdCompleted
					description="""Motion cmd completed time"""
					type=taiDate
				}
				{
					name=motionStartPositiom
					description="""Axis position at the time of cmd receipt"""
					type=float
                    units=degree
				}
				{
					name=motionEndPositiom
					description="""Axis position at the time of cmd completion"""
					type=float
                    units=degree
				}
            ]
        }

        {
			name=trackingMetrics
			description="""K-Mirror tracking metrics.  This event is only published when the K-Mirror is in TRACKING mode."""
			maxRate = 1
            category=STATUS
			archive=true
			attributes=[
				{
					name=trackingError
					description="""Difference between computed demand and current K-Mirror position"""
					type=float
                    units=degree
				}
				{
					name=withinThreshold
					description="""Flag indicating that the tracking error is within acceptable limits"""
					type=boolean
				}
            ]
        }
        
    ]
    
    alarms = [
        {
            name = hcdNotLocated
            description = """Galil HCD can not be located (HCD is down or location service fault)."""
            // TODO FIXME: The fields below were automatically added and should be updated manually
            severityLevels = [Major]
            location = "TBD..."
            alarmType = Calculated
            probableCause = "TBD..."
            operatorResponse = "TBD..."
            autoAck = false
            latched = false
        }
        {
            name = hcdFaulted
            description = """Galil HCD is in the faulted state."""
            // TODO FIXME: The fields below were automatically added and should be updated manually
            severityLevels = [Major]
            location = "TBD..."
            alarmType = Calculated
            probableCause = "TBD..."
            operatorResponse = "TBD..."
            autoAck = false
            latched = false
        }
        {
            name = assemblyFaulted
            description = """Assembly is in the faulted state."""
            // TODO FIXME: The fields below were automatically added and should be updated manually
            severityLevels = [Major]
            location = "TBD..."
            alarmType = Calculated
            probableCause = "TBD..."
            operatorResponse = "TBD..."
            autoAck = false
            latched = false
        }
    ]
}

