subsystem = APS
component = ICS.HCD.Detector

publish {

  # ────────────────────────────────────────────────────────────────
  currentStates = [
    {
      name        = "currentState"
      description = "Detector HCD telemetry (generic for Marana and COSMOS)."

      parameters = [

        {  # detector identity / profile
          name        = "detectorRole"
          type        = string
          description = "Profile role: APT, PIT, or PSH"
        },

        {  # cooling telemetry
          name        = "coolingState"
          enum        = ["Off","Stabilized","Cooling","Drift","NotStabilized","Fault","OverTemperature"]
          description = "Cooling system state"
        },
        {
          name        = "sensorTemperature"
          type        = float
          units       = degC
          description = "Sensor temperature"
        },
        {
          name        = "coolingPower"
          type        = float
          units       = percent
          description = "TEC power or duty‐cycle"
        },

        {  # pipeline state
          name        = "cameraState"
          enum        = ["IDLE","ACQUIRING","READOUT","CORRECTING","TRANSFERRING"]
          description = "Exposure pipeline state"
        },

        {  # link / acquisition flags
          name        = "cameraPresent"
          type        = boolean
          description = "Camera detected"
        },
        {
          name        = "cameraAcquiring"
          type        = boolean
          description = "Acquisition active"
        },

        {  # timing and sizing
          name        = "readoutTime"
          type        = float
          units       = second
          description = "Read‐out time of last image"
        },
        {
          name        = "frameRate"
          type        = float
          units       = hertz
          description = "Actual frame rate in continuous mode (0 for single exposure)"
        },
        {
          name        = "imageSizeBytes"
          type        = integer
//          units       = byte
          description = "Size of last image buffer in bytes"
        },
        {
          name        = "bufferCount"
          type        = integer
          description = "Number of shared‐disk buffers configured"
        },

        {  # shutter & trigger
          name        = "shutterMode"
          enum        = ["Closed","Open","Auto"]
          description = "Shutter mode"
        },
        {
          name        = "triggerMode"
          enum        = ["Internal","Software","External","ExternalStart","ExternalExposure"]
          description = "Trigger source"
        },

        {  # ROI geometry
          name        = "roiLeft"
          type        = integer
          units       = pix
          description = "ROI left column"
        },
        {
          name        = "roiTop"
          type        = integer
          units       = pix
          description = "ROI top row"
        },
        {
          name        = "roiWidth"
          type        = integer
          units       = pix
          description = "ROI width"
        },
        {
          name        = "roiHeight"
          type        = integer
          units       = pix
          description = "ROI height"
        },

        {  # binning
          name        = "hBin"
          type        = integer
          description = "Horizontal binning"
        },
        {
          name        = "vBin"
          type        = integer
          description = "Vertical binning"
        },

        {  # read‐out / gain
          name        = "pixelReadoutRate"
          enum        = ["100MHz","200MHz"]
          description = "Pixel read‐out clock"
        },
        {
          name        = "gainMode"
          enum        = ["12-bit","16-bit"]
          description = "Gain mode"
        },
        {
          name        = "pixelEncoding"
          enum        = ["Mono12","Mono16"]
          description = "Pixel encoding"
        },
        {
          name        = "fanSpeed"
          enum        = ["Off","Low","Medium","High"]
          description = "Fan speed"
        },
        {
          name        = "bitDepth"
          type        = integer
          units       = bit
          description = "Read‐out bit depth"
        },

        {  # last image integration
          name        = "integrationTime"
          type        = float
          units       = second
          description = "Integration time of last image"
        },

        {  # error reporting
          name        = "errorCode"
          type        = integer
          description = "Last non‐zero SDK / adapter error code"
        }

      ]
    }
  ]
  # ────────────────────────────────────────────────────────────────
  observeEvents = [
    "ExposureStart",
    "ExposureEnd",
    "DataWriteStart",
    "DataWriteEnd"
  ]

  # ────────────────────────────────────────────────────────────────
  images = [
    {
      name        = "detectorImage"
      description = "FITS images produced by the detector; synchronized to TCS time."
      channel     = "viz.aps.detector"         # generic; profile may override
      format      = FITS
      size        = [2048, 2048]                # overridden via profile
      pixelSize   = 2                           # arcsec/pix; profile override
      maxRate     = 10.0

      metadata = [
        {
          name        = "timestamp"
          keyword     = "DATE-OBS"
          type        = string
          description = "UTC timestamp"
        },
        {
          name        = "exposureId"
          keyword     = "EXPID"
          type        = string
          description = "Unique exposure identifier"
        },
        {
          name        = "filename"
          keyword     = "FILENAME"
          type        = string
          description = "FITS file path"
        },
        {
          name        = "integrationTime"
          keyword     = "EXPTIME"
          type        = float
          description = "Integration time (s)"
        },

        {
          name        = "roiLeft"
          keyword     = "ROILEFT"
          type        = integer
          description = "ROI left column"
        },
        {
          name        = "roiTop"
          keyword     = "ROITOP"
          type        = integer
          description = "ROI top row"
        },
        {
          name        = "roiWidth"
          keyword     = "ROIWID"
          type        = integer
          description = "ROI width"
        },
        {
          name        = "roiHeight"
          keyword     = "ROIHEIGHT"
          type        = integer
          description = "ROI height"
        },

        {
          name        = "hBin"
          keyword     = "HBIN"
          type        = integer
          description = "Horizontal binning"
        },
        {
          name        = "vBin"
          keyword     = "VBIN"
          type        = integer
          description = "Vertical binning"
        },

        {
          name        = "bitDepth"
          keyword     = "BITDEPTH"
          type        = integer
          description = "Read‐out bit depth"
        },
        {
          name        = "gainMode"
          keyword     = "GAINMODE"
          type        = string
          description = "Gain mode"
        },
        {
          name        = "pixelEncoding"
          keyword     = "PIXENC"
          type        = string
          description = "Pixel encoding format"
        },
        {
          name        = "pixelReadoutRate"
          keyword     = "READRATE"
          type        = string
          description = "Pixel read‐out clock"
        },
        {
          name        = "fanSpeed"
          keyword     = "FANSPEED"
          type        = string
          description = "Fan speed"
        },
        {
          name        = "sensorTemperature"
          keyword     = "DETTEMP"
          type        = float
          description = "Sensor temperature (degC)"
        }
      ]
    }
  ]
}
