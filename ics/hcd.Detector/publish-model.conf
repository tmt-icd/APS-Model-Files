subsystem = APS
component = ICS.HCD.Detector

publish {

    # ────────────────────────────────────────────────────────────────
    currentStates = [
    {
      name = "currentState"
      description = "Detector HCD status."
      parameters = [

        # ───── Identity / Device Info ─────
        {
          name        = "detectorRole"
          type        = string
          description = "Profile role: APT, PIT, or PSH"
        },

        {
          name        = "deviceAdapter"
          type        = string
          description = "Active Micro-Manager device adapter (e.g. AndorSDK3, PVCam)"
        },

        {
          name        = "simulating"
          type        = boolean
          description = "True when using DemoCamera device adapter."
        },

        # ───── Acquisition Mode & Buffering ─────
        {
          name        = "acquisitionMode"
          enum        = ["SINGLE","BURST","LOOP"]
          description = "Current acquisition mode."
        },
        {
          name        = "bufferModel"
          enum        = ["SINGLE","CONTAINER","RING"]
          description = "Memory strategy used for data capture"
        },
        {
          name        = "path"
          type        = string
          description = """
              Shared-memory location of the active buffer(s).
                • CONTAINER (burst) : absolute file path of the burst container
                • SINGLE            : absolute file path of the single-shot buffer
                • RING (loop)       : prefix for ring slots; slot i is path + "_" + i
            """
        },
        {
          name        = "cameraState"
          enum        = ["IDLE","BUSY","STREAMING","PAUSED","FAULT","RECOVERING"]
          description = "Camera acquisition state"
        },
        {
          name        = "cameraPresent"
          type        = boolean
          description = "Camera detected and initialized"
        },

        # ───── Cooling Telemetry ─────
        {
          name        = "coolingHealth"
          enum        = ["Good", "Degraded", "Bad"]
          description = "Cooling subsystem health classification (mapped from device-specific states)"
        },
        {
          name        = "temperature"
          type        = float
          units       = degC
          description = "Measured detector temperature"
        },
        {
          name        = "temperatureSetPoint"
          type        = float
          units       = degC
          description = "Configured temperature setpoint"
        },
        {
          name        = "fanControl"
          type        = string
          description = """Fan control setting. Allowed values depend on detector:
                          Marana supports: Off, Low, Medium, On
                          COSMOS supports: On, Off"""
        },

        # ───── Timing & Buffer Status ─────
        {
          name        = "integrationTime"
          type        = float
          units       = second
          description = "Exposure duration of last image"
        },
        {
          name        = "readoutTime"
          type        = float
          units       = second
          description = "Time to read out last image"
        },
        {
          name        = "frameRate"
          type        = float
          units       = hertz
          description = "Loop mode frame rate"
        },
        {
          name        = "imageSizeBytes"
          type        = integer
          description = "Size of last image buffer in bytes"
        },

        # ───── ROI ─────
        {
          name        = "roiHBin"
          type        = integer
          units       = pix
          description = "Horizontal binning"
        },
        {
          name        = "roiVBin"
          type        = integer
          units       = pix
          description = "Vertical binning"
        },
        {
          name        = "roiLeft"
          type        = integer
          units       = pix
          description = "ROI left column"
        },
        {
          name        = "roiTop"
          type        = integer
          units       = pix
          description = "ROI top row"
        },
        {
          name        = "roiWidth"
          type        = integer
          units       = pix
          description = "ROI width"
        },
        {
          name        = "roiHeight"
          type        = integer
          units       = pix
          description = "ROI height"
        },
        # AndorMarana-specific
        {
          name = "pixelEncoding"
          description = "Marana data stream format"
          type = string
        },
        {
          name = "gainMode"
          description = "Marana gain/bit-depth mode"
          type = string
        },
        {
          name = "pixelReadoutRate"
          description = "Marana pixel readout rate"
          type = string
        },
        {
          name = "spuriousNoiseFilter"
          description = "Marana spurious noise filter enabled"
          type = boolean
        },

        # TeledyneCOSMOS-specific
        {
          name = "adcBitDepth"
          description = "COSMOS Bit Depth"
          type = integer
        },
        {
          name = "adcAnalogGain"
          description = "COSMOS analog gain mode"
          type = string
        },
        {
          name = "readoutControlMode"
          description = "COSMOS readout control mode"
          type = string
        },
        {
          name = "CMSMode"
          description = "COSMOS Correlated Multisampling mode (On/Off)"
          type = string
        },

        # ───── Error Handling ─────
        {
          name        = "errorCode"
          type        = integer
          description = "Last non-zero error code from SDK or MM"
        },
        {
          name        = "errorMessage"
          type        = string
          description = "Associated human-readable message"
        }
      ]
    }
  ]

  events = [
    {
      name        = "FrameReady"
      description = "Per-frame notification in exposure loop mode: a ring-buffer slot has been filled and is safe for Assembly consumption."
      maxRate     = 0.1
      parameters = [
        {
          name        = "frameSeq"
          type        = long
          description = "Monotonic frame sequence number for the current loop session."
        },
        {
          name        = "ringIndex"
          type        = integer
          description = "Ring buffer slot just written (0..bufferCount-1)."
        },
        {
          name        = "lastFrameTS"
          type        = taiDate
          description = "TAI Timestamp when copy finished"
        },
        {
          name        = "bufferCopyTime"
          type        = float
          units       = millisecond
          description = "Duration of the copy from µManager to shared memory for this frame."
        }
      ]
    }
  ]
}
