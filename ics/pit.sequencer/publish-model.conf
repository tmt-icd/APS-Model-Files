subsystem=APS
component=ICS.PIT.Sequencer
publish {
	description = "Event publishing from the PIT loop"

	events = [
    
        {
			name=status
			description="""PIT Loop Status"""
			maxRate = 1
			archive=true
            category=STATUS
			attributes=[
				{
					name=pitLoopState
					description="""State of the PIT Loop"""
					enum=["STOPPED", "NOTCONVERGED", "TILTPLATEOFFLOADING", "CONVERGED"]
				}
				{
					name=pupilXRegistrationError
					description="""Calculated Pupil X Registration Error at M1"""
					type=float
                    units=meter
				}
				{
					name=pupilYRegistrationError
					description="""Calculated Pupil Y Registration Error at M1"""
					type=float
                    units=millimeter
				}
				{
					name=pupilRotationError
					description="""Calculated Pupil Rotation Error"""
					type=float
                    units=millimeter
				}
				{
					name=pupilScaleError
					description="""Calculated Pupil Scale Error"""
					type=float
                    units=percent
				}
                {
 					name=imageXTranslationError
					description="""Calculated Image X Translation Error"""
					type=integer
                    units=pix
               
                }
                {
 					name=imageYTranslationError
					description="""Calculated Image Y Translation Error"""
					type=integer
                    units=pix
               
                }
				{
					name=kMirrorCorrectionCommand
					description="""Calculated KMirror Correction Command"""
					type=float
                    units=degree
				}
				{
					name=tiltPlateXCorrectionCommand
					description="""Calculated Tilt Plate X Correction Command"""
					type=float
                    units=millimeter
				}
				{
					name=tiltPlateYCorrectionCommand
					description="""Calculated Tilt Plate Y Correction Command"""
					type=float
                    units=millimeter
				}
				{
					name=collimatorUnitScaleCorrectionCommand
					description="""Calculated CollimatorUnit Scale Correction Command"""
					type=float
                    units=millimeter
				}
 				{
					name=telescopeXOffsetCommand
					description="""Calculated Telescope X Offset in APT Pixels Command"""
					type=integer
                    units=pix
				}
				{
					name=telescopeYOffsetCommand
					description="""Calculated Telescope Y Offset in APT Pixels Command"""
					type=integer
                    units=pix
				}
            ]
        }
        {
			name=pitLoopMetrics
			description="""PIT Loop sequence metrics for a single loop execution"""
			maxRate = 1
            category=ARCHIVE
			archive=true
			attributes=[
				{
					name=pitExposureStartTime
					description="""Start time for taking a PIT exposure in the PIT loop"""
					type=taiDate
				}
				{
					name=pitExposureCompletedTime
					description="""Completion time for taking a PIT exposure in the PIT loop"""
					type=taiDate
				}
				{
					name=pitImageTransferStartTime
					description="""PIT image transfer from HCD to computation assembly start time"""
					type=taiDate
				}
				{
					name=pitImageTransferCompletedTime
					description="""PIT image transfer from HCD to computaion assembly completion time"""
					type=taiDate
				}
				{
					name=pitComputationsStartTime
					description="""PIT loop computations start time"""
					type=taiDate
				}
				{
					name=pitComputationsCompletedTime
					description="""PIT loop computations completed time"""
					type=taiDate
				}
				{
					name=icsComponentsCmdsStartTime
					description="""Start time of ICS Components commands"""
					type=taiDate
				}
				{
					name=icsComponentsCmdsCompletedTime
					description="""ICS Components commands completed time"""
					type=taiDate
				}
				{
					name=tcsCmdsStartTime
					description="""Start time of TCS command sent"""
					type=taiDate
				}
				{
					name=tcsCmdsCompletedTime
					description="""Completed time of TCS command"""
					type=taiDate
				}
			]
		}
        {
			name=apsAlertEvent
			archive=true
			description="""Event used to communicate that an unexpected condition occured."""
			maxRate = 1
			archive=true
            category=EVENT
			attributes=[
				{
					name=messageSeverity
					description="""Unhandled errors require filling the message field, whereas other types should fill in the messageId"""
					enum = [WARN, ERROR, UNHANDLED_ERROR]
                }
				{
					name=source
					description="""Sensor originating warnings, errors, controller error codes/messages reported from the controller, and warnings/errors that are a result of calculations"""
					enum = [SENSOR, HARDWARE_REPORTED, CALCULATED]
                }
				{
					name=messageId
					description="""Key used within the PEAS UI resource properties configuration file that holds all alert messages.  Different from procedure events, these alert messages contain placeholders for messageArgs in this alert event."""
					type=string
                }
                {
                    name=messageArgs
                    description="""The message text obtained by the message Id key contains argument placeholders (e.g., {0}, {1}, etc.) that indicate where variable argument values will be inserted. This field provides the ordered list of string values to substitute into the message at the corresponding placeholder positions."""
                    type=string
                }
				{
					name=message
					description="""Message supplied by the event source for unhandled errors"""
					type=string
                }
			]
		}

    ]
}
