{
  "openapi": "3.0.3",
  "info": {
    "title": "The PEAS Procedure Setup service API",
    "version": "0.1-SNAPSHOT",
    "description": "HTTP API to PEAS Procedure Setup service, used for setting up alignment procedure sequences prior to running them"
  },
  "paths": {
    "/getProcedureTypes": {
      "get": {
        "description": "Returns the current list of available alignment procedures",
        "operationId": "getProcedureTypes",
        "responses": {
          "200": {
            "description": "Returns a list of available procedure types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcedureTypesList"
                },
                "example": {
                  "procedureTypeList": [
                    {
                      "procedureTypeId": 2,
                      "procedureTypeName": "Broadband Phasing"
                    },
                    {
                      "procedureTypeId": 1,
                      "procedureTypeName": "Coarse Tilt Alignment"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
    "/getProcedureSetupDefaults": {
      "get": {
        "description": "Returns the list of setup parameters for the procedure type populated with default values",
        "operationId": "GetProcedureSetupDefaults",
        "parameters": [
          {
            "name": "procedureTypeId",
            "in": "query",
            "description": "The procedure type ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of setup parameters for the procedure type populated with default values",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SetupKeyValuePair"
                  }
                },
                "example": [
                  {
                    "key": {
                      "iterationNumber": 1,
                      "fieldName": "filter"
                    },
                    "value": {
                      "type": "string",
                      "dim1": 1,
                      "dim2": 1,
                      "encodedStringValue": "F865N"
                    }
                  },
                  {
                    "key": {
                      "iterationNumber": 1,
                      "fieldName": "pupilMask"
                    },
                    "value": {
                      "type": "string",
                      "dim1": 1,
                      "dim2": 1,
                      "encodedStringValue": "SH-2"
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
    "/getBbSetupDefaults": {
      "get": {
        "description": "Returns filter and phasing step size defaults given the broadband phasing option",
        "operationId": "getBbSetupDefaults",
        "parameters": [
          {
            "name": "procedureTypeId",
            "in": "query",
            "description": "The procedure type ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          },
          {
            "name": "phasingOption",
            "in": "query",
            "description": "The Broadband phasing option: 1000, 300, 30, etc",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Returns filter and phasing step size defaults given the broadband phasing option",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SetupKeyValuePair"
                  }
                },
                "example": [
                  {
                    "key": {
                      "iterationNumber": 1,
                      "fieldName": "filter"
                    },
                    "value": {
                      "type": "string",
                      "dim1": 1,
                      "dim2": 1,
                      "encodedStringValue": "F865N"
                    }
                  },
                  {
                    "key": {
                      "iterationNumber": 1,
                      "fieldName": "stepSize"
                    },
                    "value": {
                      "type": "float",
                      "dim1": 1,
                      "dim2": 1,
                      "encodedStringValue": "1.0"
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },      
    "/getProcedureSetupOptions": {
      "get": {
        "description": "Returns the list of options for setup values that are chosen from an option list",
        "operationId": "getProcedureSetupOptions",
        "parameters": [
          {
            "name": "procedureTypeId",
            "in": "query",
            "description": "The procedure type ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of option values for each setup parameter whose value is an enumeration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SetupKeyOptionListPair"
                  }
                },
                "example": [
                  {
                    "key": {
                      "iterationNumber": 1,
                      "fieldName": "integrationTime"
                    },
                    "options": [
                      {"optionValue": "0.1", "displayOrder": 1},
                      {"optionValue": "10.0", "displayOrder": 2},
                      {"optionValue": "20.0", "displayOrder": 3},
                      {"optionValue": "40.0", "displayOrder": 4},
                      {"optionValue": "60.0", "displayOrder": 5}
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
      
     "/getDetectorsSetupDefaults": {
      "get": {
        "description": "Returns gain and integration time for the exposure to be taken for each of the APS detectors.  Takes atmospheric conditions into account.",
        "operationId": "getDetectorsSetupDefaults",
        "parameters": [
          {
            "name": "procedureTypeId",
            "in": "query",
            "description": "The procedure type ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          },
          {
            "name": "starType",
            "in": "query",
            "description": "The star spectral type",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "G2V"
          },
          {
            "name": "starMagnitude",
            "in": "query",
            "description": "The star magnitude",
            "required": true,
            "schema": {
              "type": "float"
            },
            "example": 5.6
          },
          {
            "name": "atmosphericTransparency",
            "in": "query",
            "description": "Atmospheric extinction in magnitudes per airmass",
            "required": false,
            "schema": {
              "type": "float"
            },
            "example": 0.15
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Detector gains (lo/hi) and integration times per detector",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DetectorGainAndIntTime"
                  }
                },
                "example": [
                  {
                    "detector": "APT",
                    "gain": "LOW", 
                    "integrationTime": "0.08"
                  },
                  {
                    "detector": "PIT",
                    "gain": "LOW", 
                    "integrationTime": "6.6"
                  },
                  {
                    "detector": "APT",
                    "gain": "LOW", 
                    "integrationTime": "24.5"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/getPupilPositioningDefaults": {
      "get": {
        "description": "Returns pupil translation/rotation setup default values, obtained from the most recent on-sky procedure run.",
        "operationId": "getPupilPositioningDefaults",
        "responses": {
          "200": {
            "description": "Default positions for mechanisms that move APS pupil",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tiltPlateX": {
                      "type": "float",
                      "description": "Tilt plate x position in mm at M1"
                    },
                    "tiltPlateY": {
                      "type": "float",
                      "description": "Tilt plate x position in mm at M1"
                    },
                    "kMirrorPosition": {
                      "type": "float",
                      "description": "K-Mirror position in degrees"
                    },
                    "collimatorBackMotor": {
                      "type": "float",
                      "description": "Collimator back motor position in mm"
                    },
                    "collimatorFrontMotor": {
                      "type": "float",
                      "description": "Collimator front motor position in mm"
                    }
                  }
                },
                "example": [
                  {
                    "tiltPlateX": 3.2,
                    "tiltPlateY": -0.3,
                    "kMirrorPosition": 63.7, 
                    "collimatorBackMotor": -4.2,
                    "collimatorFrontMotor": -0.1
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/getProcedureConfigurationDefaults": {
      "get": {
        "description": "Returns the list of procedure configuration parameters populated with default values.  If filters are applied, all parameters for the procedure type are returned.",
        "operationId": "getProcedureConfigurationDefaults",
        "parameters": [
          {
            "name": "procedureTypeId",
            "in": "query",
            "description": "The procedure type ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 4
          },
          {
            "name": "pshPupilMask",
            "in": "query",
            "description": "Return only parameter defaults for PSH Pupil Mask equal to the passed value",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["PH-2-0", "SH-0", "SH-2", "SH-5", "Clear"]
            },
            "example": "SH-2"
          },
          {
            "name": "pshFilter",
            "in": "query",
            "description": "Return only parameter defaults for PSH Filter equal to the passed value",
            "required": false,
            "schema": {
              "type": "string", 
              "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
            },
            "example": "F890N"
          },
          {
            "name": "lightSource",
            "in": "query",
            "description": "Return only parameter defaults for given light source",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["CALIBRATION", "STIMULUS", "SKY"]
            },
            "example": "SKY"
          },
          {
            "name": "broadbandPhasingOption",
            "in": "query",
            "description": "Return only parameter defaults for given broadband phasing option",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [1000, 100, 30]
            },
            "example": 100
          }  
        ],
        "responses": {
          "200": {
            "description": "List of procedure configuration parameters in key/value pairs.  When a returned key optional property is absent, the field and value match all values of that property.  More specific property keyed values override more general ones.  In the example provided, the configuration value to display centroid offsets is generally false, except for the specified procedure type, pupil mask and light source.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcedureConfigurationKeyValuePair"
                  }
                },
                "example": [
                  {
                    "key": {"procedureTypeId": 1, "pshPupilMask": "SH-2", "lightSource": "SKY", "fieldName": "displayCentroidOffsets"},
                    "value": {"type": "boolean", "dim1": 1, "dim2": 1, "encodedStringValue": "true"}
                  },
                  {
                    "key": {"fieldName": "displayCentroidOffsets"},
                    "value": {"type": "integer", "dim1": 1, "dim2": 1, "encodedStringValue": "false"}
                  }
                ]                
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/generateProcedureSequence": {
      "post": {
        "description": "Returns the sequence template specific to the procedure specified in the request and modified with the setup parameters and execution preferences supplied in the request.",
        "operationId": "generateProcedureSequence",
        "requestBody": {
          "description": "Procedure Template identifying information and arguments as input",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateAndInputArguments"
              },
              "example": {
                "procedureTypeId": "1234",
                "templateVersion": "32",
                "arguments": [
                  {
                    "key": {
                      "iterationNumber": 1,
                      "fieldName": "filter"
                    },
                    "value": {
                      "type": "string",
                      "dim1": 1,
                      "dim2": 1,
                      "encodedStringValue": "F865N"
                    }
                  },
                  {
                    "key": {
                      "iterationNumber": 1,
                      "fieldName": "stepSize"
                    },
                    "value": {
                      "type": "float",
                      "dim1": 1,
                      "dim2": 1,
                      "encodedStringValue": "1.0"
                    }
                  }            
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Serialized JSON string of the generated sequence",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Serialized JSON string of the generated sequence"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/getInstalledSegments": {
      "get": {
        "description": "Returns a list of currently installed segments and recently installed segments.",
        "operationId": "getInstalledSegments",
        "responses": {
          "200": {
            "description": "List of all 492 mirror cells, associated segment Ids",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstalledSegment"
                  }
                },
                "example": [
                  {
                    "mirrorCell": "A43",
                    "mirrorCellNumber": 43,
                    "intalledSegmentId": 342, 
                    "recentlyInstalled": false
                  },
                  {
                    "mirrorCell": "B2",
                    "mirrorCellNumber": 84
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
    "/loadApsRecognizedSegmentsConfig": {
      "get": {
        "description": "Returns the mirror cells that will be recognized by APS algorithms.  Configuration is loaded from the “RecognizedSegments” if timestamp matches the current observing period.",
        "operationId": "loadApsRecognizedSegmentsConfig",
        "responses": {
          "200": {
            "description": "List of mirror cells or fails if no appropriate config exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mirrorCellNumber": {
                        "type": "integer"      
                      }
                    },
                    "required": ["mirrorCellNumber"]
                  }
                },
                "example": [
                  {
                    "mirrorCellNumber": 43
                  },
                  {
                    "mirrorCellNumber": 84
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          },
          "404": {
            "description": "No data was found with the provided URI",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/storeApsRecognizedSegmentsConfig": {
      "post": {
        "description": "Stores the mirror cells that will be recognized by APS algorithms into the “RecognizedSegments” file.",
        "operationId": "postStoreCentroidMap",
        "requestBody": {
          "description": "List of recognized mirror cell numbers.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "mirrorCellNumber": {
                      "type": "integer"
                    }
                  },
                  "required": ["mirrorCellNumber"]
                }
              },
              "example": [
                {
                  "mirrorCellNumber": 43
                },
                {
                  "mirrorCellNumber": 84
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully stored recognized segments."
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
    "/loadUsableSubimages": {
      "get": {
        "description": "Returns the usable subimages configuration. If the current “UsableSubimages_Session” timestamp matches the current observing period, use that file; otherwise, load the “UsableSubimages” file.",
        "operationId": "loadUsableSubimages",
        "parameters": [
          {
            "name": "pshPupilMask",
            "in": "query",
            "description": "Return only parameter defaults for PSH Pupil Mask equal to the passed value",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["PH-2-0", "SH-0", "SH-2", "SH-5", "Clear"]
            },
            "example": "SH-2"
          }
        ],
        "responses": {
          "200": {
            "description": "List of usable subimage numbers for the mask.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subimageNumber": {
                        "type": "integer"
                      }
                    },
                    "required": ["subimageNumber"]
                  }
                },
                "example": [
                  {
                    "subimageNumber": 1
                  },
                  {
                    "subimageNumber": 2
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/getStarList": {
      "get": {
        "description": "Returns a list of stars in the DMS.CAT star catalog that match the search criteria.  For stars that also match DMS.CAT APS Specific Star Catalog RA/DEC ranges and match the supplied Primary Shack-Hartmann pupil mask and Primary Shack-Hartmann filter additional information (mask, filters) is included with each matching result.",
        "operationId": "getStarList",
        "parameters": [
          {
            "name": "raRangeStart",
            "in": "query",
            "required": true,
            "description": "RA search range start in degrees",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "raRangeEnd",
            "in": "query",
            "required": true,
            "description": "RA search range end in degrees",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "decRangeStart",
            "in": "query",
            "required": true,
            "description": "DEC search range start in degrees",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "decRangeEnd",
            "in": "query",
            "required": true,
            "description": "DEC search range end in degrees",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "minMagnitude",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "maxMagnitude",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "pshPupilMask",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PH-2-0", "SH-0", "SH-2", "SH-5", "Clear"]
            }
          },
          {
            "name": "pshFilter",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all stars within ra, dec and magnitude ranges. Depending on the star, pupil mask, and filters may have no values because there were no matching entries in the APS star catalog for these stars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StarRecord"
                  }
                },
                "example": [
                  {   
                    "starId": "HR 509",
                    "starName": "Tau Ceti",
                    "magnitude": 7.2,
                    "color": "white",
                    "ra": 36.2,
                    "dec": 298.2,
                    "specificAttrs": "BINARY",
                    "pshPupilMask": "SH-0", 
                    "pshFilter": "F890N", 
                    "pitFilter": "F890N",
                    "aptFilter": "ND1"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
    "/addApsStarRecord": {
      "post": {
        "description": "Creates a new record in the DMS.CAT APS Specific Star Catalog.  Fails (record already exists) if a record for the star, PSH Pupil Mask and PSH Filter already exists.  The record created also contains fields from the /getStarList star attributes, which is obtained by querying DMS standard star catalog (TBD)",
        "operationId": "addApsStarRecord",
        "requestBody": {
          "description": "Values required to create a record in the DMS.CAT APS Specific Star Catalog",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApsStarRecord"
              },
              "example": {
                "starId": "1234",
                "procedureTypeId": "PH-2-0",
                "pshFilter": "F890N",
                "pitFilter": "F890N",
                "aptFilter": "ND1",
                "pshIntegrationTime": 34.5,
                "pitIntegrationTime": 4.6,
                "aptIntegrationTime": 0.07
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          },
          "409": {
            "description": "Conflict. The record already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "A star entry matching values in this request already exists."
                    },
                    "code": {
                      "type": "string",
                      "example": "RECORD_ALREADY_EXISTS"
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        }
      }
    },
      
    "/applySiteConditions": {
      "get": {
        "description": "Returns star magnitude modified to account for atmospheric transmission.",
        "operationId": "applySiteConditions",
        "parameters": [
          {
            "name": "starMagnitude",
            "in": "query",
            "description": "The star magnitude from the star catalog",
            "required": false,
            "schema": {
              "type": "float"
            },
            "example": 6.3
          },
          {
            "name": "atmosphericTransparency",
            "in": "query",
            "description": "Atmospheric extinction in magnitudes per airmass",
            "required": false,
            "schema": {
              "type": "float"
            },
            "example": 0.15
          }
        ],
        "responses": {
          "200": {
            "description": "Star magnitude modified to reflect actual amount of light received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "float"
                },
                "example": 9.2
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    }




      
  },
  "components": {
    "schemas": {
      "ProcedureType": {
        "required": ["procedureTypeId", "procedureTypeName"],
        "type": "object",
        "properties": {
          "procedureTypeId": {
            "type": "integer"
          },
          "procedureTypeName": {
            "type": "string"
          }
        }
      },
      "DetectorGainAndIntTime": {
        "required": ["detector", "gain", "integrationTime"],
        "type": "object",
        "properties": {
          "Detector": {
            "type": "string",
            "enum": ["APT", "PIT", "PSH"]
          },
          "gain": {
            "type": "string",
            "enum": ["HIGH", "LOW"]
          },
          "integrationTime": {
              "type": "float"
          }    
        }
      },
      "ProcedureTypesList": {
        "type": "object",
        "required": ["procedureTypeList"],
        "properties": {
          "procedureTypeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcedureType"
            }
          }
        }
      },

      "SetupValueKey": {
        "required": ["fieldName"],
        "type": "object",
        "properties": {
          "iterationNumber": {
            "type": "integer"
          },
          "fieldName": {
            "type": "string"
          }
        }
      },
      "ProcedureConfigurationValueKey": {
        "required": ["fieldName"],
        "type": "object",
        "properties": {
          "procedureTypeId": {
            "type": "integer"
          },
          "pshPupilMask": {
            "type": "string",
            "enum": ["PH-2-0", "SH-0", "SH-2", "SH-5", "Clear"]
          },
          "pshFilter": {
            "type": "string",
            "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
          },
          "lightSource": {
            "type": "integer",
            "enum": ["CALIBRATION", "STIMULUS", "SKY"]
          },
          "fieldName": {
            "type": "string"
          }
        }
      },
      "GenericValue": {
        "required": ["type", "dim1", "dim2", "encodedStringValue"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "dim1": {
            "type": "integer"
          },
          "dim2": {
            "type": "integer"
          },
          "encodedStringValue": {
            "type": "string"
          }
        }
      },
      "OptionValue": {
        "required": ["optionValue", "displayOrder"],
        "type": "object",
        "properties": {
          "optionValue": {
            "type": "string"
          },
          "displayOrder": {
            "type": "integer"
          }
        }
      },
      "SetupKeyValuePair": {
        "required": ["key", "value"],
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/SetupValueKey"
          },
          "value": {
            "$ref": "#/components/schemas/GenericValue"
          }
        }
      },
      "SetupKeyOptionListPair": {
        "required": ["key", "options"],
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/SetupValueKey"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionValue"
            }
          }
        }
      }, 
      "ProcedureConfigurationKeyValuePair": {
        "required": ["key", "value"],
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/ProcedureConfigurationValueKey"
          },
          "value": {
            "$ref": "#/components/schemas/GenericValue"
          }
        }
      },
        
      "TemplateAndInputArguments": {
        "required": ["procedureType", "arguments"],
        "type": "object",
        "properties": {
          "procedureTypeId": {
            "type": "integer"
          },
          "templateVersion": {
              "type": "integer",
              "description": "optional parameter for the template version, latest used if parameter is absent."
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetupKeyValuePair"
            }
          }
        }
      },
        
      "InstalledSegment": {
        "required": ["mirrorCell", "mirrorCellNumber"],
        "type": "object",
        "properties": {
          "mirrorCell": {
            "type": "string"
          },
          "mirrorCellNumber": {
            "type": "integer"
          },
          "installedSegmentId": {
            "type": "integer",
            "description": "when property is absent, no segment is installed in mirror cell"
          },
          "recentlyInstalled": {
            "type": "boolean",
            "description": "when property is absent, no segment is installed in mirror cell"
          }
        }
      },
        
        
      "ApsStarRecord": {
        "required": ["starId", "pshPupilMask", "pshFilter", "pitFilter", "aptFilter", "pshIntegrationTime", "pitIntegrationTime", "aptIntegrationTime"],
        "type": "object",
        "properties": {
          "starId": {
            "type": "string"
          },
          "pshPupilMask": {
            "type": "string",
            "enum": ["PH-2-0", "SH-0", "SH-2", "SH-5", "Clear"]
          },
          "pshFilter": {
            "type": "string",
            "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
          },
          "pitFilter": {
            "type": "string",
            "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
          },
          "aptFilter": {
            "type": "string",
            "enum": ["ND1", "ND2", "NB589", "OPEN"]
          },
          "pshIntegrationTime": {
            "type": "float",
            "description": "integration time in sec"
          },
          "pitIntegrationTime": {
            "type": "float",
            "description": "integration time in sec"
          },
          "aptIntegrationTime": {
            "type": "float",
            "description": "integration time in sec"
          }
        }
      },
           
        
      "StarSearchFilters": {
        "required": ["raRangeStart", "raRangeEnd", "decRangeStart", "decRangeEnd", "minMagnitude", "maxMagnitude", "pshPupilMask", "pshFilter"],
        "type": "object",
        "properties": {
          "raRangeStart": {
            "type": "float"
          },
          "raRangeEnd": {
            "type": "float"
          },
          "decRangeStart": {
            "type": "float"
          },
          "decRangeEnd": {
            "type": "float"
          },
          "minMagnitude": {
            "type": "float"
          },
          "maxMagnitude": {
            "type": "float"
          },
          "pshPupilMask": {
            "type": "string",
            "enum": ["PH-2-0", "SH-0", "SH-2", "SH-5", "Clear"]
          },
          "pshFilter": {
            "type": "string",
            "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
          }
        }
      },
        
      "StarRecord": {
        "required": ["starId", "starName", "magnitude", "color", "ra", "dec", "specificAttrs", "hourAngle", "elevation", "timeToLimit"],
        "type": "object",
        "properties": {
          "starId": {
            "type": "string"
          },
          "starName": {
            "type": "string"
          },
          "magnitude": {
            "type": "float"
          },
          "color": {
            "type": "string"
          },
          "ra": {
            "type": "float"
          },
          "dec": {
            "type": "float"
          },
          "specificAttrs": {
            "type": "string",
            "enum": ["VARIABLE", "BINARY", "NONE"]
          },
          "pshPupilMask": {
            "type": "string",
            "enum": ["PH-2-0", "SH-0", "SH-2", "SH-5", "Clear"]
          },
          "pshFilter": {
            "type": "string",
            "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
          },
          "pitFilter": {
            "type": "string",
            "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
          },
          "aptFilter": {
            "type": "string",
            "enum": ["ND1", "ND2", "NB589", "OPEN"]
          }

        }
      }        
        
    }
  }
}

