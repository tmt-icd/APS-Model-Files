{
  "openapi": "3.0.3",
  "info": {
    "title": "The PEAS Procedure Data service API",
    "version": "0.1-SNAPSHOT",
    "description": "HTTP API to PEAS Data service, used for storing and retrieving PEAS procedure run data"
  },
  "paths": {
      
     "/createNewProcedureRun": {
      "post": {
        "description": "Creates a new procedure run record in the APS-PEAS database",
        "operationId": "postCreateNewProcedureRun",
        "responses": {
          "200": {
            "description": "Returns the ID of the new procedure run",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "example": 1234
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },


    "/storeProcedureSetupData": {
      "post": {
        "description": "Stores one set of setup data for an alignment procedure iteration",
        "operationId": "postStoreProcedureSetupData",
        "requestBody": {
          "description": "Stores one set of setup data for an alignment procedure iteration in cache and APS-PEAS database.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetupKeyValuePairList"
              },
              "example": {
                "procedureRunId": 101,
                "keyValuePairList": [
                  {
                    "key": {"iterationNumber": 1, "fieldName": "temperatureSetpoint"},
                    "value": {"type": "double", "dim1": 1, "dim2": 1, "encodedStringValue": "36.5"}
                  },
                 {
                    "key": {"iterationNumber": 1, "fieldName": "otherField"},
                    "value": {"type": "integer", "dim1": 1, "dim2": 1, "encodedStringValue": "16"}
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
    "/storeAsRunProcedureConfiguration": {
      "post": {
        "description": "Stores as-run procedure configuration in cache and APS-PEAS database",
        "operationId": "postStoreAsRunProcedureConfiguration",
        "requestBody": {
          "description": "Stores as-run procedure configuration in cache and APS-PEAS database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsRunConfigurationKeyValuePairList"
              },
              "example": {
                "procedureRunId": 101,
                "keyValuePairList": [
                  {
                    "key": {"procedureRunId": 101, "fieldName": "temperatureSetpoint"},
                    "value": {"type": "double", "dim1": 1, "dim2": 1, "encodedStringValue": "36.5"}
                  },
                 {
                    "key": {"procedureRunId": 101, "fieldName": "otherField"},
                    "value": {"type": "integer", "dim1": 1, "dim2": 1, "encodedStringValue": "16"}
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },

    "/storeProcedureComputationResults": {
      "post": {
        "description": "Stores a computation result set in cache and in APS-PEAS database",
        "operationId": "postStoreProcedureComputationResults",
        "requestBody": {
          "description": "Stores a computation result set in cache and in APS-PEAS database.  For multi-dimensional data, dim1 is the fastest changing index and is used for 1-D vector lengths.  When both dim1 and dim2 are zero, the value is a scalar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputationKeyValuePairList"
              },
              "example": {
                "procedureRunId": 101,
                "keyValuePairList": [
                  {
                    "key": {"procedureRunId": 101, "iterationNumber": 1, "computationName": "findCent", "fieldName": "spotType"},
                    "value": {"type": "double", "dim1": 492, "dim2": 1, "encodedStringValue": "{36.5, 438.2, ..."}
                  },
                 {
                    "key": {"procedureRunId": 101, "iterationNumber": 1, "computationName": "product", "fieldName": "result"},
                    "value": {"type": "double", "dim1": 1, "dim2": 1, "encodedStringValue": "16.0"}
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/storePeasNotificationEvent": {
      "post": {
        "description": "Stores a PEAS notification event message in cache and APS-PEAS database.",
        "operationId": "postStorePeasNotificationEvent",
        "requestBody": {
          "description": "Stores notification event message in cache and APS-PEAS database.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeasNotificationEvent"
              },
              "example": {
                "procedureRunId": "1234",
                "timestamp": "2045-02-23 11:23:35", 
                "severity": "Info",
                "message": "An informational message"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/setProcedureRunCompletionStatus": {
      "post": {
        "description": "Stores the procedure run completion status (Success|Aborted) in the APS-PEAS database.",
        "operationId": "postSetProcedureRunCompletionStatus",
        "requestBody": {
          "description": "Stores the procedure run completion status (Success|Aborted) in the APS-PEAS database.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["completionStatus"],
                "properties": {
                  "completionStatus": {
                    "type": "string",
                    "description": "the completion status",
                    "enum": ["success", "aborted"]
                  }
                }
              },
              "example": {
                "completionStatus": "success"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
     
    "/storeCentroidMap": {
      "post": {
        "description": "Stores a centroid map for an exposure in the APS-PEAS database.",
        "operationId": "postStoreCentroidMap",
        "requestBody": {
          "description": "Stores a centroid map for an exposure in the APS-PEAS database.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CentroidMapData"
              },
              "example": {
                "procedureRunId": "1234",
                "exposureTimestamp": "2045-02-23 11:23:35",
                "iterationNumber": 1,
                "centroidList": [
                  { "xValue": 107.4, "yValue": 2301.4 },
                  { "xValue": 560.0, "yValue": 345.9 },
                  { "xValue": 2561.3, "yValue": 4723.4 }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
 
    "/storeRefBeamMap": {
      "post": {
        "description": "Stores a ref beam map in the APS-PEAS database for a filter, mask, detector and k-mirror position.",
        "operationId": "postStoreReferenceMap",
        "requestBody": {
          "description": "Stores a reference map in the APS-PEAS database for a detector, filter, mask and k-mirror position",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceMapData"
              },
              "example": {
                "procedureRunId": "1234",
                "exposureTimestamp": "2045-02-23 11:23:35",
                "detector": "PSH",
                "pupilMask": "PH-2-0",
                "filter": "F890N",
                "kMirrorPos": "180",
                "detectorTemp:": "-25.4", 
                "tiltPlatePosX": "1.3",
                "tiltPlatePosY": "2.5",
                "centroidList": [
                  { "xValue": 107.4, "yValue": 2301.4 },
                  { "xValue": 560.0, "yValue": 345.9 },
                  { "xValue": 2561.3, "yValue": 4723.4 }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
 
    "/storeCameraPointingOffset": {
      "post": {
        "description": "Stores camera pointing offset data in cache and APS-PEAS database.",
        "operationId": "postStoreCameraPointingOffset",
        "requestBody": {
          "description": "SStores camera pointing offset data in cache and APS-PEAS database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CameraPointingOffset"
              },
              "example": {
                "procedureRunId": "1234",
                "pshImageCenter": {"xValue": 107.4, "yValue": 2301.4},
                "pitImageCenter": {"xValue": 107.4, "yValue": 2301.4},
                "aptImageCenter": {"xValue": 107.4, "yValue": 2301.4}
               }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
    "/storePrCalPitClosedLoopPositions": {
      "post": {
        "description": "Stores pupil registration closed loop converged positions of tilt plate, k-Mirror and collimator and PR errors",
        "operationId": "postStorePrCalPitClosedLoopPositions",
        "requestBody": {
          "description": "Stores pupil registration  closed loop converged positions of tilt plate, k-Mirror and collimator and PR errors.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrConvergedPositionsAndErrors"
              },
              "example": {
                "procedureRunId": "1234",
                "kMirrorPosition": 230.4,
                "tiltPlatePosition": {"xPosition": 107.4, "yPosition": 2301.4},
                "collimatorPosition": {"backMotorPosition": 107.4, "frontMotorPosition": 2301.4},
                "pupilTranslationError": {"xError": 1.2, "yError": 0.4},
                "pupilRotationError": 0.23,
                "pupilScaleError": 0.78
               }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
  
      
      
      
   "/loadProcedure": {
      "get": {
        "description": "Creates a new procedure data cache and loads it with data queried from the database.",
        "operationId": "getLoadProcedure",
        "parameters": [
          {
            "name": "procedureRunId",
            "in": "query",
            "description": "The procedure run id of the procedure run data to load",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }           
        ],

        "responses": {
          "200": {
            "description": "Procedure run is loaded successfully"
          },
          "400": {
            "description": "Bad Request.  Arguments provided were not correct or were incomplete",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          },
          "404": {
            "description": "No data was found with the provided URI",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
   "/getProcedureSetupData": {
      "get": {
        "description": "Returns all procedure setup values for the given procedure run and iteration index.",
        "operationId": "getProcedureSetupData",
        "parameters": [
          {
            "name": "procedureRunId",
            "in": "query",
            "description": "The procedure run id of the procedure",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          },           
          {
            "name": "iterationIndex",
            "in": "query",
            "description": "The iteration within the procedure that the setup applies to",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }           
        ],

        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SetupKeyValuePair"
                  }
                },
                "example": [
                  {
                    "key": {"iterationNumber": 1, "fieldName": "temperatureSetpoint"},
                    "value": {"type": "double", "dim1": 1, "dim2": 1, "encodedStringValue": "36.5"}
                  },
                  {
                    "key": {"iterationNumber": 1, "fieldName": "otherField"},
                    "value": {"type": "integer", "dim1": 1, "dim2": 1, "encodedStringValue": "16"}
                  }
                ]                
              }
            }
          },
          "400": {
            "description": "Bad Request.  Arguments provided were not correct or were incomplete",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          },
          "404": {
            "description": "No data was found with the provided URI",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
   "/getProcedureAsRunConfigurationData": {
      "get": {
        "description": "Returns all as-run (user changeable) configuration key/value pairs used for the given procedure run.",
        "operationId": "getProcedureAsRunConfigurationData",
        "parameters": [
          {
            "name": "procedureRunId",
            "in": "query",
            "description": "The procedure run id of the procedure",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          }         
        ],

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AsRunConfigurationKeyValuePair"
                  }
                },
                "example": [
                  {
                    "key": {"fieldName": "scalarValue"},
                    "value": {"type": "double", "dim1": 1, "dim2": 1, "encodedStringValue": "36.5"}
                  },
                  {
                    "key": {"fieldName": "otherField"},
                    "value": {"type": "integer", "dim1": 1, "dim2": 1, "encodedStringValue": "16"}
                  }
                ]                
              }
            }
          },
          "400": {
            "description": "Bad Request.  Arguments provided were not correct or were incomplete",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          },
          "404": {
            "description": "No data was found with the provided URI",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Error message."
              }
            }
          }
        }
      }
    },
      
      
    "/getProcedureResultData": {
      "post": {
        "description": "Returns procedure result data for the list of passed keys.",
        "operationId": "getProcedureResultData",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "procedureRunId",
                  "computationResultKeys"
                ],
                "properties": {
                  "procedureRunId": {
                    "type": "integer",
                    "description": "The procedure run ID of the procedure"
                  },
                  "computationResultKeys": {
                    "type": "array",
                    "description": "List of keys to retrieve result data for",
                    "items": {
                      "$ref": "#/components/schemas/ComputationResultKey"
                    }
                  }
                }
              },
              "example": {
                "procedureRunId": 1234,
                "computationResultKeys": [
                  {
                    "computationName": "findCent",
                    "fieldName": "scalarValue",
                    "iterationNumber": 2
                  },
                  {
                    "computationName": "colorStep",
                    "fieldName": "otherField",
                    "iterationNumber": 2
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComputationKeyValuePair"
                  }
                },
                "example": [
                  {
                    "key": {
                      "iterationNumber": 2,
                      "computationName": "findCent",
                      "fieldName": "scalarValue"
                    },
                    "value": {
                      "type": "double",
                      "dim1": 1,
                      "dim2": 1,
                      "encodedStringValue": "36.5"
                    }
                  },
                  {
                    "key": {
                      "iterationNumber": 2,
                      "computationName": "colorStep",
                      "fieldName": "otherField"
                    },
                    "value": {
                      "type": "integer",
                      "dim1": 1,
                      "dim2": 1,
                      "encodedStringValue": "16"
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request.  Arguments provided were not correct or were incomplete",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "Invalid or missing input"
              }
            }
          },
          "404": {
            "description": "No data was found with the provided request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "No matching data found"
              }
            }
          }
        }
      }
    }


      
      
      

      
  },
    
    
  "components": {
    "schemas": {
        
      "ComputationResultKey": {
        "required": [
          "computationName",
          "fieldName"
        ],
        "type": "object",
        "properties": {
          "iterationNumber": {
            "type": "integer"
          },
          "computationName": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          }
        }
      }, 
        
      "SetupValueKey": {
        "required": [
          "fieldName"
        ],
        "type": "object",
        "properties": {
          "iterationNumber": {
            "type": "integer"
          },
          "fieldName": {
            "type": "string"
          }
        }
      }, 
        
      "AsRunConfigurationValueKey": {
        "required": [
          "fieldName"
        ],
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          }
        }
      }, 
        
      "GenericValue": {
        "required": [
          "type",
          "dim1",
          "dim2",
          "encodedStringValue"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "dim1": {
            "type": "integer"
          },
          "dim2": {
            "type": "integer"
          },
          "encodedStringValue": {
            "type": "string"
          }
        }
      },   
        
        
      "ComputationKeyValuePair": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/ComputationResultKey"
          },
          "value": {
            "$ref": "#/components/schemas/GenericValue"
          }
        }
      },
        
      "SetupKeyValuePair": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/SetupValueKey"
          },
          "value": {
            "$ref": "#/components/schemas/GenericValue"
          }
        }
      },
        
      "AsRunConfigurationKeyValuePair": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/AsRunConfigurationValueKey"
          },
          "value": {
            "$ref": "#/components/schemas/GenericValue"
          }
        }
      },
        
        
      "ComputationKeyValuePairList": {
        "required": [
          "procedureRunId",
          "keyValuePairList"
        ],
        "properties": {
          "procedureRunId": {
              "type": "integer"
          },
          "keyValuePairList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComputationKeyValuePair"
            }
          }
        }
      },
        
      "SetupKeyValuePairList": {
        "required": [
          "procedureRunId",
          "keyValuePairList"
        ],
        "properties": {
          "procedureRunId": {
              "type": "integer"
          },
          "keyValuePairList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetupKeyValuePair"
            }
          }
        }
      },
        
      "AsRunConfigurationKeyValuePairList": {
        "required": [
          "procedureRunId",
          "keyValuePairList"
        ],
        "properties": {
          "procedureRunId": {
              "type": "integer"
          },
          "keyValuePairList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsRunConfigurationKeyValuePair"
            }
          }
        }
      },
        
        

      "PeasNotificationEvent": {
        "required": [
          "procedureRunId",
          "timestamp", 
          "severity",
          "message"
        ],
        "type": "object",
        "properties": {
          "procedureRunId": {
            "type": "integer"
          },
          "timestamp": {
            "type": "date-time"
          },
          "severity": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
    
 
        
        
      "Centroid": {
        "required": [
          "xValue",
          "yValue"
        ],
        "type": "object",
        "properties": {
          "xValue": {
            "type": "float"
          },
          "yValue": {
            "type": "float"
          }
        }
      },
      "CentroidList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Centroid"
        }
      },
  
      "CentroidMapData": {
        "required": [
          "procedureRunId",
          "iterationNumber",
          "exposureNumber",
          "centroidList"
        ],
        "type": "object",
        "properties": {
          "procedureRunId": {
            "type": "integer"
          },
          "iterationNumber": {
            "type": "integer"
          },
          "exposureNumber": {
            "type": "integer"
          },
          "centroidList": {
            "$ref": "#/components/schemas/CentroidList"
          }
        }
      },
        
      "CameraPointingOffset": {
        "required": [
          "procedureRunId",
          "pshImageCenter",
          "pitImageCenter",
          "aptImageCenter"
         ],
        "type": "object",
        "properties": {
          "procedureRunId": {
            "type": "integer"
          },
          "pshImageCenter": {
            "$ref": "#/components/schemas/Centroid"
          },
          "pitImageCenter": {
            "$ref": "#/components/schemas/Centroid"
          },
          "aptImageCenter": {
            "$ref": "#/components/schemas/Centroid"
          }
        }
      },
       
      "ReferenceMapData": {
        "required": [
          "procedureRunId",
          "exposureTimestamp",
          "detector",
          "pupilMask",
          "filter",
          "kMirrorPos",
          "detectorTemp",
          "tiltPlateX",
          "tiltPlateY",
          "centroidList"
        ],
        "type": "object",
        "properties": {
          "procedureRunId": {
            "type": "integer"
          },
          "exposureTimestamp": {
            "type": "date-time"
          },
          "detector": {
            "type": "string",
            "enum": ["PIT", "PSH"]
          },
          "pupilMask": {
            "type": "string",
            "enum": ["PH-2-0", "SH-0", "SH-2", "SH-5", "Clear"]
          },
          "filter": {
            "type": "string",
            "enum": ["F890N", "F891N", "F850M", "F750W", "F810N", "F630N", "F865N"]
          },
         "kMirrorPos": {
            "type": "float",
            "description": "kMirror position in degrees"
          },
         "detectorTemp": {
            "type": "float",
            "description": "detector temperature in degrees Celsius"
          },
          "tiltPlateX": {
            "type": "float",
            "description": "Tilt plate X position in mm"
          },
          "tiltPlateY": {
            "type": "float",
            "description": "Tilt plate Y position in mm"
          },
          "centroidList": {
            "$ref": "#/components/schemas/CentroidList"
          }
        }
      },
        
      "PrConvergedPositionsAndErrors": {
        "required": [
          "procedureRunId",
          "kMirrorPosition",
          "tiltPlatePosition",
          "collimatorPosition",
          "pupilTranslationError",
          "pupilRotationError",
          "pupilScaleError"
        ],
        "type": "object",
        "properties": {
          "procedureRunId": {
            "type": "integer"
          },
         "kMirrorPos": {
            "type": "float",
            "description": "kMirror position in degrees"
          },
          "tiltPlateX": {
            "type": "float",
            "description": "Tilt plate X position in mm"
          },
          "tiltPlateY": {
            "type": "float",
            "description": "Tilt plate Y position in mm"
          },
          "collimatorFrontMotor": {
            "type": "float",
            "description": "Colimator Front Motor position in mm"
          },
          "collimatorBackMotor": {
            "type": "float",
            "description": "Colimator Back Motor position in mm"
          },
          "pupilTranslationErrorX": {
            "type": "float",
            "description": "Pupil X translation error in mm at M1"
          },
          "pupilTranslationErrorY": {
            "type": "float",
            "description": "Pupil Y translation error in mm at M1"
          },
          "pupilRotationError": {
            "type": "float",
            "description": "Pupil rotation error in degrees"
          },
          "pupilScaleError": {
            "type": "float",
            "description": "Pupil scale error in percent"
          }
        }
      },

        
          
      "QueryResult": {
        "required": [
          "apsFilename",
          "uri",
          "loRezUri"
        ],
        "type": "object",
        "properties": {
          "exposureId": {
            "type": "string",
            "description": "the exposure Id of the PSH exposure"
          },
          "apsFilename": {
            "type": "string",
            "description": "the APS filename of the PSH exposure"
          },
          "uri": {
            "type": "string",
            "description": "the uri to access the exposure"
          },
          "loRezUri": {
            "type": "string",
            "description": "the uri to access the low-rez exposure image file"
          }
        }
      },
      "Exposure": {
        "required": [
          "utc",
          "det"
        ],
        "type": "object",
        "properties": {
          "utc": {
            "type": "string",
            "description": "date and time of exposure yyyy-mm-dd hh:mm:ss",
            "format": "datetime"
          },
          "det": {
            "type": "string",
            "description": "detector"
          },
          "procType": {
            "type": "string",
            "description": "procedure type"
          },
          "procNum": {
            "type": "string",
            "description": "procedure run number within a night session"
          },
          "expNum": {
            "type": "string",
            "description": "exposure number within a procedure run"
          },
          "mask": {
            "type": "string",
            "description": "pupil mask"
          }
        }
      }
    }
  }
}

}