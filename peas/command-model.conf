subsystem=APS
component=APS PEAS
description=""""""
receive=[
{
	name=offsetM2Position 
	description="""Allows APS to command the secondary mirror by desired offset positions."""
	args=[
			{
				name=piston
				description="""Offset from current position of the piston."""
				type=double
				units=m
			}
			{
				name=tip
				description="""Offset from current position in tip."""
				type=double
				units=degree
			}
			{
				name=tilt
				description="""Offset from current position in tilt."""
				type=double
				units=degree
			}
			{
				name=decenter-x
				description="""Offset from current position in x."""
				type=double
				units=m
			}
			{
				name=decenter-y
				description="""Offset from current position in y."""
				type=double
				units=m
			}
		]
}
{
	name=clearM2PositionOffsets
	description="""Allows APS to command the secondary mirror offsets to be cleared and M2 returned to the base position."""
}
{
	name=saveM2Position  
	description="""Allows APS to record when the M2 is in a well-aligned state at the current zenith angle and temperature. GUID needs to be returned by TCS as an event."""
}
{
	name=loadM2Position 
	description="""Allows APS to restore M2 to a saved position. Commands TCS to load a saved M2 position compensating for current temperature and current zenith angle."""
	requiredArgs=["m2PosSaveId"]
	args=[
			{
				name=m2PosSaveId
				description="""Identifier returned from a previous saveM2Position cmd."""
				type=string
			}
		]
}
{
	name=offsetM3Position 
	description="""Allows APS to command the tertiary mirror to a desired offset. Command tertiary offsets in M3CS local coordinates."""
	requiredArgs=["rotation", "tilt"]
	args=[
			{
				name=rotation
				description="""offset from current position in rotation axis."""
				type=double
				units=degree
			}
			{
				name=tilt
				description="""offset from current position in tilt axis."""
				type=double
				units=degree
			}
		]
}
{
	name=offsetPupilLocationWithM3
	description="""Allows APS to offset the telescope pupil location. Used to correct the telescope pupil registration error."""
	requiredArgs=["x", "y"]
	args=[
			{
				name=x
				description="""Offset from current position (m at M1 in M1 coord sys) in x."""
				type=double
				units=m
			}
			{
				name=y
				description="""Offset from current position (m at M1 in M1 coord sys) in y."""
				type=double
				units=m
			}
			{
				name=correctPointing
				description="""If true, repoint the telescope to keep the image location constant."""
				type=boolean
			}
		]
}
{
	name=offsetImageLocationWithM3
	description="""Allows APS to offset star images as seen by APS.  This is needed so that APS can observe stars off-axis."""
	requiredArgs=["az", "el"]
	args=[
			{
				name=az
				description="""Offset from current position in azimuth axis."""
				type=double
				units=degree
			}
			{
				name=el
				description="""Offset from current position in elevation axis."""
				type=double
				units=degree
			}
		]	
}
{
	name=clearM3PositionOffsets
	description="""Allows APS to command the M3 mirror offsets to be cleared and M3 returned to the base position."""	
}
{
	name=saveM3Position
	description="""Commands TCS to record when the M3 is in a well-aligned state at the current zenith angle and temperature."""
	requiredArgs=["m3PosSaveId"]
	args=[
			{
				name=m3PosSaveId
				description="""Globally unique identifier."""
				type=string
			}
		]	
}
{
	name=loadM3Position
	description="""Allows APS to restore M3 to a saved position using the current lookup tables. Loads a saved M3 position compensating for current temperature and current zenith angle."""
	requiredArgs=["m3PosSaveId"]
	args=[
			{
				name=m3PosSaveId
				description="""Identifier returned from a previous saveM3Position cmd."""
				type=string
			}
		]	
}
{
	name=offsetTelescopePosAzEl 
	description="""Allows APS to offset the telescope position such that the star moves by the specified amount in az/el coordinates."""
	requiredArgs=["az"]
	args=[
			{
				name=az
				description="""Offset from current position in azimuth axis."""
				type=double
				units=degree
			}
			{
				name=el
				description="""Offset from current position in elevation axis."""
				type=double
				units=degree
			}
		]
}
{
	name=offsetTelescopePosAptPixels
	description="""Allows APS to command TCS to offset the telescope position in APT detector coordinates. The command is used to center the image on the SH camera."""
	requiredArgs=["x", "y", "plateScale"]
	args=[
			{
				name=x
				description="""Offset from current position in x."""
				type=double
				units=pixel
			}
			{
				name=y
				description="""Offset from current position in y."""
				type=double
				units=pixel
			}
			{
				name=plateScale
				description="""Plate scale of the detector."""
				type=double
				units=degree/pixel
			}
		]
}
{
	name=clearTelescopePositionOffsets
	description="""Allows APS to command the telescope offsets to be cleared and returned to the base position."""
}
]
send=[
	{
		name=offsetM2Position
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=clearM2PositionOffsets
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=saveM2Position
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=loadM2Position
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=offsetM3Position
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=offsetPupilLocationWithM3
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=offsetImageLocationWithM3
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=clearM3PositionOffsets
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=saveM3Position
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=loadM3Position
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=offsetTelescopePosAzEl
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=offsetTelescopePosAptPixels
		subsystem=TCS
		component=TCS APS Assembly
	}
	{
		name=clearTelescopePositionOffsets
		subsystem=TCS
		component=TCS APS Assembly
	}
# Commands to M1CS GLC start here
	{
		name=RestoreSensorCalibCoeff
		subsystem=M1CS
		component=GLC
	}
	{
		name=GetSensorCalibCoeff
		subsystem=M1CS
		component=GLC
	}
	{
		name=OffsetSegmentPosition
		subsystem=M1CS
		component=GLC
	}
	{
		name=SaveCurrentSensorCalibCoeff
		subsystem=M1CS
		component=GLC
	}
	{
		name=OffloadSensorOffsets
		subsystem=M1CS
		component=GLC
	}
	{
		name=SaveSensorReadings
		subsystem=M1CS
		component=GLC
	}
	{
		name=CalibrateWarpingHarness
		subsystem=M1CS
		component=GLC
	}
	{
		name=GetWHConfiguration
		subsystem=M1CS
		component=GLC
	}
	{
		name=ReadWHStrains
		subsystem=M1CS
		component=GLC
	}
	{
		name=SetWHStrain
		subsystem=M1CS
		component=GLC
	}
	{
		name=OffsetWHStrain
		subsystem=M1CS
		component=GLC
	}
	{
		name=OffsetWHPosition
		subsystem=M1CS
		component=GLC
	}
]
