subsystem=APS
component=PEAS.AlignmentProcedureSequencerB
description=""""""
receive=[

# Common Cmds

	{
		name=takePshExposure
		description="""Takes an APS-ICS primary shack hartmann exposure"""
		completionType=longRunning
		requiredArgs=["integrationTime"]
		args=[
            {
				name=integrationTime
				description="""Integration time"""
				type=float
				units=second
			}
		]
	}
    {
		name=startPitTracking
		description="""Used by M3 and Off-Axis Aligment procedures. Sends a command to the PIT Loop Sequencer to start the PIT Loop"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=stopPitTracking
		description="""Used by M3 and Off-Axis Aligment procedures. Sends a command to the PIT Loop Sequencer to stop the PIT loop"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=stopGuidingLoop
		description="""Sends a command to the ESW Acquistion and Guiding sequencer to stop the guiding loop"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}

    {
		name=calcCentroids
		description="""Calculate the centroid positions in the most recent PSH exposure"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=displayCentroids
		description="""Renders a display of the found centroids by centroid number graphically on the PEAS user interface"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=calcImageAndPrOffsets
		description="""Calculates the pupil registration offsets in translation, rotation and scale and calculate the image offset from reference center"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=correctPitTracking
		description="""Publish the pshPupilAndImageErrors event containing the pupil registration and image offsets to the PIT Loop"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    
# Procedure Startup

    {
		name=setupPshOpticalArm
		description="""Sets up the PSH optical arm for taking PSH images.  This is performed during on-sky procedure startup"""
		completionType=longRunning
		requiredArgs=["pshFilter", "pshPupilMask"]
		args=[
            {
				name=pshFilter
				description="""The name of the filter to position into the beam"""
				enum= [F890N, F891N, F850M, F750W, F810N, F630N, F865N]
			}
            {
				name=pshPupilMask
				description="""The name of the pupilMask to position into the beam"""
				enum= [PH-2-0, SH-0, SH-2, SH-5, Clear]
			}
            {
				name=pshRoiStartRow
				description="""start row of ROI."""
				type=integer
				units=pix
			}
			{
				name=pshRoiStartCol
				description="""start col of ROI."""
				type=integer
				units=pix
			}
			{
				name=pshRoiWidth
				description="""width of ROI"""
				type=integer
				units=pix
			}
			{
				name=pshRoiHeight
				description="""height of ROI"""
				type=integer
				units=pix
			}
			{
				name=pshAnalogGainMode
				description="""Analog gain"""
				enum= [LOW, HIGH, HDR]
			}

		]
	}
    {
		name=createRefMap
		description="""Takes a new reference beam map.  This is performed during on-sky procedure startup"""
		completionType=longRunning
		requiredArgs=["pshRefBeamIntTime", "pshRefBeamAnalogGainMode"]
		args=[

            {
				name=pshRefBeamIntTime
				description="""Integration time for the PSH when taking a reference beam."""
				type=float
				units=pix
			}
			{
				name=pshAnalogGainMode
				description="""Analog gain"""
				enum= [LOW, HIGH, HDR]
			}

		]
	}

    
# Coarse Tilt Alignment 

    {
		name=ctaCalcCentroidOffsets
		description="""Used in Coarse Tilt Alignment procedure.  Calculates the offsets between the calculated centroids and the centroids of the reference beam map"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=ctaDisplayCentroidOffsets
		description="""Used in Coarse Tilt Alignment procedure.  Renders a display of the centroid offsets from reference beam to the PEAS user interface"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=ctaAdjustSegmentsNotFound
		description="""Used in Coarse Tilt Alignment procedure.  Command M1CS to move segments not found using a raster search pattern consisting of maxSearchCount offsets, each offset move is 10 arcsec """
		completionType=longRunning
		requiredArgs=["rasterSearchStep"]
		args=[
            {
				name=rasterSearchStep
				description="""The step within the raster search to use to move the segments not yet found"""
				type=integer
			}
		]
	}
    {
		name=ctaCalcTelescopePointingOffset
		description="""Used in Coarse Tilt Alignment procedure.  Calculate the telescope pointing offset"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=ctaCmdTelescopeOffsetInPixels
		description="""Used in Coarse Tilt Alignment procedure.  Command TCS to offset the telescope position in Apt Pixels"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    
# Ridgid Body and Segment Figure    
    
    {
		name=rbsfAskOpIfCmdM2
		description="""Used in Rigid Body and Segment Figure procedure.  Renders a user prompt asking the operator if APS should send commands to M2"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=rbsfCmdM2PttOrPxyIfRespOk
		description="""Used in Rigid Body and Segment Figure procedure.  Depending on the operator reponse to commanding M2, commands are sent to M2 based on the M2 command method(piston/tip/tilt or piston, (x,y) decenter).  """
		completionType=longRunning
		requiredArgs=["rbsM2OpResp", "m2CmdMethod"]
		args=[
            {
				name=rbsM2OpResp
				description="""The operator response to commanding M2"""
				enum=[YES, NO]
			}
            {
				name=m2CmdMethod
				description="""The M2 Command method, PTT or PXY"""
				enum=[PTT, PXY]
			}
		]
	}
    {
		name=rbsfTakeSnapIfRespOk
		description="""Used in Rigid Body and Segment Figure procedure. If the operator response was affirmative, a snapshot is commanded to be taken by sending the saveM2Position cmd to TCS."""
		completionType=longRunning
		requiredArgs=["rbsM2OpResp"]
		args=[
            {
				name=rbsM2OpResp
				description="""The operator response to commanding M2"""
				enum=[YES, NO]
			}
		]
	}
    
# Broadband Phasing    
    
    {
		name=bbpCalcColorstepM1Pistons
		description="""Used in Broadband Phasing procedure.  Calculates the next M1CS offsets based on the colorstep index"""
		completionType=longRunning
		requiredArgs=["colorStepIndex"]
		args=[
            {
				name=colorStepIndex
				description="""The step index of the colorstep to command"""
				type=integer
			}

		]
	}
    {
		name=bbpCmdM1CSMoves
		description="""Used in Broadband Phasing procedure.  Commands the M1CS to the next colorstep offsets"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=bbpRestoreM1ToInitialPositions
		description="""Used in Broadband Phasing procedure.  Restores M1 segment postions to the positions at the procedure start"""
		completionType=longRunning
		requiredArgs=["colorStepCount"]
		args=[
            {
				name=colorStepCount
				description="""The total number of steps in the colorstep sequence"""
				type=integer
			}
		]
	}
    
# Narrowband Phasing
    
    {
		name=nbpCalcColorstepM1Pistons
		description="""Used in Narrowband Phasing procedure.  Calculates the next M1CS offsets based on the colorstep index"""
		completionType=longRunning
		requiredArgs=["colorStepIndex"]
		args=[
            {
				name=colorStepIndex
				description="""The step index of the colorstep to command"""
				type=integer
			}

		]
	}
    {
		name=nbpCmdM1CSMoves
		description="""Used in Narrowband Phasing procedure.  Commands the M1CS to the next colorstep offsets"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=nbpRestoreM1ToInitialPositions
		description="""Used in Narrowband Phasing procedure.  Restores M1 segment postions to the positions at the procedure start"""
		completionType=longRunning
		requiredArgs=["colorStepCount"]
		args=[
            {
				name=colorStepCount
				description="""The total number of steps in the colorstep sequence"""
				type=integer
			}
		]
	}
    
# M3 Alignment    
    
    {
		name=m3aCalcTiltPlateMotion
		description="""Used in M3 Alignment procedure.  Calculates the tilt plate motion to compensate for telescope pupil registration errors"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=m3aAdjustTiltPlateAndM3
		description="""Used in M3 Alignment procedure.  Sends commands in parallel: correction commands to the ICS tilt plate and a TCS command to offset pupil location with M3."""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=m3aWaitForPitToStabilize
		description="""Used in M3 Alignment procedure.  Checks the PIT Sequencer status event's PIT loop state until it is CONVERGED. """
		completionType=longRunning
		requiredArgs=["errorTimeout"]
		args=[ 
            {
				name=errorTimeout
				description="""Waiting for PIT loop state to converge timeout.  If reached, the operator is prompted with the error and  the option to abort or keep waiting."""
				type=integer
                units=second
			}

		]
	}
    {
		name=m3aGetTiltPlatePosition
		description="""Used in M3 Alignment procedure.  Subscribes to the ICS Tilt Plate axis status events are reads current x,y positions"""
		completionType=longRunning
		requiredArgs=[]
		args=[ 
		]
	}
    {
		name=m3aCalcTelPrError
		description="""Used in M3 Alignment procedure.  Calculates the telescope pupil registration error"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=m3aAskOpifAbort
		description="""Used in M3 Alignment procedure.  The M3 alignment loop completed when telescope pupil registration errors converge below a threshold.  This step gives the operator the opportunity to abort if the values appear not be converging """
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=m3aRestoreTiltPlateAndM3IfRespOk
		description="""Used in M3 Alignment procedure.  In the event of an abort, the tilt plate and M3 positions are returned to theri pre-procedure positions"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    
# Warping Harness Influence Functions    
    
    {
		name=whifCalcCentrioidOffsets
		description="""Used in Warping Harness Influence Functions procedure.  Calculates the centroid offsets between the current PSH exposure's subimage locations and that of the reference beam map."""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=whifCalcAvgCentroidOffsets
		description="""Used in Warping Harness Influence Functions procedure.  Calculates the average centroid offsets for all exposures taken for a specific warping harness actuator motor offset"""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
    {
		name=whifApplyMotorMoveToAllSegsNthMotor
		description="""Used in Warping Harness Influence Functions procedure.  Commands the same specific motor number on each segment in the segment list. Sends one command to M1CS for each segment in the segment list or all segments if segmentList parameter is absent."""
		completionType=longRunning
		requiredArgs=["currentMotorNumber"]
		args=[
            {
				name=currentMotorNumber
				description="""The motor number to move"""
				type=integer
			}
            {
				name=motorMoveDirection
				description="""The direction of each motor move"""
				enum=[ZERO, POSITIVE, NEGATIVE]
			}
            {
				name=motorMoveMaxPercent
				description="""The amount of the motor move in percent of max force"""
				type=integer
			}
            {
				name=segmentList
				description="""List of segment locations to use.  All locations are used if argument is missing."""
				type=string
			}

		]
	}
    {
		name=whifAskUserIfContinueToNextMotor
		description="""Used in Warping Harness Influence Functions procedure.  Once a motor has completed testing, the next motor number will be tested.  Since it may not be possible to stay on the same star for all motors, this command renders a prompt to the PEAS user interface to allow the operator to end the procedure at this point.  If the operator selects 'exit', the procedure ends and a new procedure Warping Harness and Influence Functions procedure can be started.  If the user selects 'continue', the next motor number is tested."""
		completionType=longRunning
		requiredArgs=[]
		args=[
		]
	}
]
send=[


    # APS-PEAS Sequencer C

 
 	{
		name=m3aAdjustTiltPlate
		subsystem=APS
		component=PEAS.AlignmentProcedureSequencerC
	}
    
    # APS-PEAS Sequencer C
    
	{
		name=m3aOffsetPupilLocationWithM3
		subsystem=APS
		component=PEAS.AlignmentProcedureSequencerD
	}

    # APS-ICS PIT Sequencer

    {
		name=start
		subsystem=APS
		component=ICS.PIT.Sequencer
	}
    {
		name=stop
		subsystem=APS
		component=ICS.PIT.Sequencer
	}

    # APS-ICS components

	{
		name=selectFilter
		subsystem=APS
		component=ICS.PSH.PupilMaskWheel
	}

	{
		name=selectPupilMask
		subsystem=APS
		component=ICS.PSH.PupilMaskWheel
	}

    {
		name=configureDetector
		subsystem=APS
		component=ICS.PSH.Detector
	}

    {
		name=takeExposure
		subsystem=APS
		component=ICS.PSH.Detector
	}

    {
		name=storeExposure
		subsystem=APS
		component=ICS.PSH.Detector
	}


# M1CS

	{
		name=OffsetActuatorPositions
		subsystem=M1CS
		component=GLC
	}
    {
		name=SetWarpingHarness
		subsystem=M1CS
		component=GLC
	}


# TCS

	{
		name=offsetTelescopePosAptPixels
		subsystem=TCS
		component=TCS APS Assembly
	}

	{
		name=offsetM2Position
		subsystem=TCS
		component=TCS APS Assembly
	}
    
    {
		name=saveM2Position
		subsystem=TCS
		component=TCS APS Assembly
	}





    
]
