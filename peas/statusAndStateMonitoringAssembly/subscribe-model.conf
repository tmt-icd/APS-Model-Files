subsystem=APS
component=PEAS.StatusAndStateMonitoringAssembly
subscribe{
description="""APS-PEAS subscribes to events from TCS subsystem and the M1CS subsystem."""
events=[
# Events from TCS subsystem start here

	{
		subsystem=TCS
		component=TCS APS Assembly
		name=TCS Status
		usage="""Status of the TCS system."""
		maxRate = 1
	}
	{
		subsystem=TCS
		component=tcsSeq
		name=state
		usage="""State of TCS operation."""
		maxRate = 1
	}
	{
		subsystem=TCS
		component=tcsSeq
		name=m2State
		usage="""State of M2 operation."""
		maxRate = 1
	}
	{
		subsystem=TCS
		component=tcsSeq
		name=m3State
		usage="""State of M3 operation."""
		maxRate = 1
	}

# Events from M1CS subsystem start here
	{
		subsystem=M1CS
		component=GLC
		name=M1Health
		usage="""APS uses this event to determine the health of M1CS before sending any operational commands (TBR)."""
		maxRate = 1
	}
	{
		subsystem=M1CS
		component=GLC
		name=M1RtcStatus
		usage="APS uses this event to check the M1CS RTC's state before sending commands to the M1CS."
		maxRate = 1
	}

# Events from APS-ICS start here
	{
		subsystem=APS
		component=ICS.SAM
		name=icsStatusEvent
		usage="APS uses this event in determination overall APS state and readiness to perform or abort alignment procedures ."
		maxRate = 1
	}
# PEAS UI
    {
        subsystem=APS
        component=PEAS.PeasWebApplication
        name=ProcedureCompletedEvent
        usage="""Event published when submitted sequence has completed"""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.PeasWebApplication
        name=ProcedureStartedEvent
        usage="""Event published when a procedure has started."""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.PeasWebApplication
        name=userPromptResponseEvent
        usage="""User response to a prompt."""
        maxRate=1
    }

#TODO: write event and determine source
    {
        subsystem=APS
        component=PEAS.<Not Sure>
        name=ObservingModeEvent
        usage="""Event sent when Alignment Procedure sequencer is loaded with a new script.Â  This event contains the current observing mode."""
        maxRate=1
    }
# PEAS SequencerA
    {
        subsystem=APS
        component=PEAS.AlignmentProcedureSequencerA
        name=ProcedureAbortingEvent
        usage="""Event published when a procedure is aborting."""
        maxRate=1
    }

# Notification Events (SAMA only processes error notifications)
    {
        subsystem=APS
        component=PEAS.AlignmentProcedureSequencerA
        name=apsProcedureEvent
        usage="""Used in determining overall state/health of system."""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.AlignmentProcedureSequencerB
        name=apsProcedureEvent
        usage="""Used in determining overall state/health of system."""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.AlignmentProcedureSequencerC
        name=apsProcedureEvent
        usage="""Used in determining overall state/health of system."""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.AlignmentProcedureSequencerD
        name=apsProcedureEvent
        usage="""Used in determining overall state/health of system."""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.ProcedureDataService
        name=apsAlertEvent
        usage="""Used in determining overall state/health of system."""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.ExposureService
        name=apsAlertEvent
        usage="""Used in determining overall state/health of system."""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.ProcedureSetupService
        name=apsAlertEvent
        usage="""Used in determining overall state/health of system."""
        maxRate=1
    }
    {
        subsystem=APS
        component=PEAS.ComputationAssembly
        name=apsAlertEvent
        usage="""Used in determining overall state/health of system."""
        maxRate=1
    }
  ]
observeEvents = [
    {
        subsystem=ESW
        component=TopLevelSequencer
        name=ObservationStart
    }


  ]
  

}
